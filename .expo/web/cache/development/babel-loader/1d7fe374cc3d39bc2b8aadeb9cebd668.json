{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport MessagingScreen from \"../screens/MessagingScreen\";\nimport ChatScreen from \"../screens/ChatScreen\";\nimport LoginScreen from \"../screens/AuthScreens/LoginScreen\";\nimport RegisterScreen from \"../screens/AuthScreens/RegisterScreen\";\nimport AccountScreen from \"../screens/ProfileScreens/AccountScreen\";\nimport SettingsScreen from \"../screens/ProfileScreens/SettingsScreen\";\nimport SecurityScreen from \"../screens/ProfileScreens/SecurityScreen\";\nimport ContactScreen from \"../screens/ProfileScreens/ContactScreen\";\nimport MyCards from \"../screens/ProfileScreens/MyCards\";\nimport EditMyBuyerScreen from \"../screens/MyCardsEditScreen/EditMyBuyerScreen\";\nimport EditMyTravelerScreen from \"../screens/MyCardsEditScreen/EditMyTravelerScreen\";\nimport EditUserName from \"../screens/AccountScreens/EditUserName\";\nimport EditName from \"../screens/AccountScreens/EditName\";\nimport EditEmail from \"../screens/AccountScreens/EditEmail\";\nimport EditLocation from \"../screens/AccountScreens/EditLocation\";\nimport EditBuyerDetails from \"../screens/MyCardsEditScreen/EditBuyerDetails\";\nimport EditTravelerDetails from \"../screens/MyCardsEditScreen/EditTravelerDetails\";\nimport EditSpace from \"../screens/MyCardsEditScreen/EditSpace\";\nimport MainTabNavigator from \"./MainTabNavigator\";\nimport HomeScreen from \"../screens/AuthScreens/HomeScreen\";\nimport OtherProfile from \"../components/Connect/OtherProfile\";\nimport ConnectScreen from \"../screens/ConnectScreen\";\nimport { useSelector } from \"react-redux\";\nimport Test from \"../screens/Test\";\nimport Test2 from \"../screens/Test2\";\nimport TestImg from \"../screens/TestImg\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport RecentlyTest from \"../screens/RecentlyTest\";\nimport UserRecently from \"../screens/UserRecently\";\nimport { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport UserTest from \"../screens/UserTest\";\nimport PushScreen from \"../screens/PushScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Navigator = function Navigator() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var keys = Object.keys(user);\n  var _ChatState = ChatState(),\n    messageHeader = _ChatState.messageHeader,\n    setmessageHeader = _ChatState.setmessageHeader;\n  return _jsx(NavigationContainer, {\n    children: keys ? _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#f9f8fc'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabNavigator,\n        options: {\n          headerShown: false,\n          headerTintColor: '#593196'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Chats\",\n        component: ChatScreen\n      }), _jsx(Stack.Screen, {\n        name: \"User Details\",\n        component: OtherProfile\n      }), messageHeader ? _jsx(Stack.Screen, {\n        name: \"Messaging\",\n        component: MessagingScreen,\n        options: function options(_ref) {\n          var route = _ref.route;\n          return {\n            title: _jsx(UserRecently, {\n              data: route.params.chatId,\n              user: route.params.userSelected\n            }),\n            headerShown: false\n          };\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"Messaging\",\n        component: MessagingScreen,\n        options: function options(_ref2) {\n          var route = _ref2.route;\n          return {\n            title: _jsx(UserRecently, {\n              data: route.params.chatId,\n              userData: route.params.userSelected\n            }),\n            headerShown: true\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Account\",\n        component: AccountScreen,\n        options: {\n          headerTintColor: '#000'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Security\",\n        component: SecurityScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Contact Us\",\n        component: ContactScreen,\n        options: {\n          headerStyle: {\n            backgroundColor: '#593196'\n          },\n          headerTintColor: \"#fff\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"My Cards\",\n        component: MyCards\n      }), _jsx(Stack.Screen, {\n        name: \"Edit UserName\",\n        component: EditUserName\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Name\",\n        component: EditName\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Email\",\n        component: EditEmail\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Location\",\n        component: EditLocation\n      }), _jsx(Stack.Screen, {\n        name: \"Edit MyTraveler\",\n        component: EditMyTravelerScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Edit MyBuyer\",\n        component: EditMyBuyerScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Buyer Details\",\n        component: EditBuyerDetails\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Traveler Details\",\n        component: EditTravelerDetails\n      }), _jsx(Stack.Screen, {\n        name: \"Edit Space Available\",\n        component: EditSpace\n      })]\n    }) : _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#f9f8fc'\n        }\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false,\n          headerTintColor: '#593196'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false,\n          headerTintColor: '#593196'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Register\",\n        component: RegisterScreen,\n        options: {\n          headerShown: false,\n          headerTintColor: '#593196'\n        }\n      })]\n    })\n  });\n};\nexport default Navigator;","map":{"version":3,"names":["NavigationContainer","createStackNavigator","MessagingScreen","ChatScreen","LoginScreen","RegisterScreen","AccountScreen","SettingsScreen","SecurityScreen","ContactScreen","MyCards","EditMyBuyerScreen","EditMyTravelerScreen","EditUserName","EditName","EditEmail","EditLocation","EditBuyerDetails","EditTravelerDetails","EditSpace","MainTabNavigator","HomeScreen","OtherProfile","ConnectScreen","useSelector","Test","Test2","TestImg","ChatState","RecentlyTest","UserRecently","useRef","useEffect","UserTest","PushScreen","Stack","Navigator","state","auth","user","keys","Object","messageHeader","setmessageHeader","headerStyle","backgroundColor","headerShown","headerTintColor","route","title","params","chatId","userSelected"],"sources":["/home/dagmawi/personal/borsa/myborsa/borsa-ui/src/navigation/Navigator.js"],"sourcesContent":["import { View, Text, StyleSheet, AppState } from \"react-native\"\nimport {NavigationContainer} from '@react-navigation/native'\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport MessagingScreen from \"../screens/MessagingScreen\"\nimport ChatScreen from \"../screens/ChatScreen\"\nimport LoginScreen from \"../screens/AuthScreens/LoginScreen\"\n// import LoginWithGoogle from \"../screens/AuthScreens/LoginWithGoogle\"\nimport RegisterScreen from \"../screens/AuthScreens/RegisterScreen\"\nimport AccountScreen from '../screens/ProfileScreens/AccountScreen'\nimport SettingsScreen from '../screens/ProfileScreens/SettingsScreen'\nimport SecurityScreen from '../screens/ProfileScreens/SecurityScreen'\nimport ContactScreen from '../screens/ProfileScreens/ContactScreen'\nimport MyCards from \"../screens/ProfileScreens/MyCards\"\nimport EditMyBuyerScreen from \"../screens/MyCardsEditScreen/EditMyBuyerScreen\"\nimport EditMyTravelerScreen from \"../screens/MyCardsEditScreen/EditMyTravelerScreen\"\nimport EditUserName from \"../screens/AccountScreens/EditUserName\"\nimport EditName from \"../screens/AccountScreens/EditName\"\nimport EditEmail from \"../screens/AccountScreens/EditEmail\"\nimport EditLocation from \"../screens/AccountScreens/EditLocation\"\nimport EditBuyerDetails from \"../screens/MyCardsEditScreen/EditBuyerDetails\"\nimport EditTravelerDetails from \"../screens/MyCardsEditScreen/EditTravelerDetails\"\nimport EditSpace from \"../screens/MyCardsEditScreen/EditSpace\"\nimport MainTabNavigator from \"./MainTabNavigator\"\nimport HomeScreen from \"../screens/AuthScreens/HomeScreen\"\nimport OtherProfile from \"../components/Connect/OtherProfile\"\nimport ConnectScreen from \"../screens/ConnectScreen\"\nimport { useSelector } from \"react-redux\"\nimport Test from \"../screens/Test\"\nimport Test2 from \"../screens/Test2\"\nimport TestImg from \"../screens/TestImg\"\nimport { ChatState } from \"../context/ChatProvider\"\nimport RecentlyTest from \"../screens/RecentlyTest\"\nimport UserRecently from \"../screens/UserRecently\"\nimport { useRef } from \"react\"\nimport { useEffect } from \"react\"\nimport UserTest from \"../screens/UserTest\"\nimport PushScreen from \"../screens/PushScreen\"\n\n\nconst Stack = createStackNavigator();\nconst Navigator = () => {\n  // const appState = useRef(AppState.currentState);\n  const { user } = useSelector((state) => state.auth)\n  const keys = Object.keys(user)\n  const {messageHeader, setmessageHeader} = ChatState()\n  // useEffect(() =>{\n\n  //   const subscription = AppState.addEventListener('change', nextAppState => {\n  //     // console.log(nextAppState)\n  //     // if (\n  //     //   appState.current.match(/inactive|background/) &&\n  //     //   nextAppState === 'active'\n  //     // ) {\n  //     //   console.log('App has come to the foreground!');\n  //     // }\n  //   //   if(appState.current.match(/background/) &&\n  //   //   nextAppState === 'background'){\n  //   //     console.log('display that the user is away')\n  //   //   }\n    \n  //   // if(nextAppState === 'background'){\n  //   //   dispatch(fetchChat())\n  //   // }\n  //   // if(nextAppState === 'active'){\n  //   //   dispatch(fetchChat())\n  //   // }\n  //   // else if(nextAppState === 'active'){\n  //   //   console.log('return user to online status')\n  //   // }\n  //   // console.log(user)\n  //   //   appState.current = nextAppState;\n  //   //   setAppStateVisible(appState.current);\n  //   //   console.log('AppState', appState.current);\n  //   });\n    \n  \n  //   return () => {\n  //     subscription.remove();\n  //   };\n      \n    \n  // }, [])\n  return (\n   <NavigationContainer>\n   {keys ? (\n    <Stack.Navigator screenOptions={{headerStyle: {backgroundColor: '#f9f8fc'}}}>\n    <Stack.Screen name=\"Main\" component={MainTabNavigator} options={{headerShown: false, headerTintColor: '#593196'}} />\n    {/* <Stack.Screen name=\"Chats\" component={RecentlyTest} /> */}\n    <Stack.Screen name=\"Chats\" component={ChatScreen} />\n    {/* <Stack.Screen name=\"Chats\" component={PushScreen} /> */}\n    {/* <Stack.Screen name=\"Chats\" component={Test2} /> */}\n   \n    <Stack.Screen name=\"User Details\" component={OtherProfile} />\n    { messageHeader ? (<Stack.Screen name=\"Messaging\" component={MessagingScreen}  options={({ route }) => ({\n  \n    // title: route.params.userSelected,\n     \n    title: <UserRecently data={route.params.chatId} user={route.params.userSelected}/>,\n    headerShown: false\n  })}/>) :  (<Stack.Screen name=\"Messaging\" component={MessagingScreen}  options={({ route }) => ({\n    // title: route.params.userSelected,\n     title: <UserRecently data={route.params.chatId} userData={route.params.userSelected}/>,\n    headerShown: true\n  })}/>) }\n   \n   \n    <Stack.Screen name=\"Account\" component={AccountScreen} options={{headerTintColor: '#000'}}/>\n    <Stack.Screen name=\"Settings\" component={SettingsScreen}/>\n    <Stack.Screen name=\"Security\" component={SecurityScreen}/>\n    <Stack.Screen name=\"Contact Us\" component={ContactScreen} \n        options = {{\n          headerStyle: {\n            backgroundColor: '#593196',\n           // backgroundColor: '#a991d4',\n          },\n          \n          headerTintColor: \"#fff\"\n        }}/>\n         <Stack.Screen name = \"My Cards\" component={MyCards} />\n    <Stack.Screen name = \"Edit UserName\" component={EditUserName} />\n    <Stack.Screen name = \"Edit Name\" component={EditName} />\n    <Stack.Screen name = \"Edit Email\" component={EditEmail} />\n    <Stack.Screen name = \"Edit Location\" component={EditLocation} />\n    <Stack.Screen name = \"Edit MyTraveler\" component={EditMyTravelerScreen} />\n    <Stack.Screen name = \"Edit MyBuyer\" component={EditMyBuyerScreen} />\n    <Stack.Screen name = \"Edit Buyer Details\" component={EditBuyerDetails} />\n    <Stack.Screen name = \"Edit Traveler Details\" component={EditTravelerDetails} />\n    <Stack.Screen name = \"Edit Space Available\" component={EditSpace} />\n    </Stack.Navigator>\n\n   ): (\n    <Stack.Navigator screenOptions={{headerStyle: {backgroundColor: '#f9f8fc'}}}>\n     <Stack.Screen name=\"Home\" component={HomeScreen} options={{headerShown: false, headerTintColor: '#593196'}} />\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={{headerShown: false, headerTintColor: '#593196'}}/>\n      {/* <Stack.Screen name=\"LoginWithGoogle\" component={LoginWithGoogle} options={{headerShown: false, headerTintColor: '#593196'}}/> */}\n    <Stack.Screen name=\"Register\" component={RegisterScreen} options={{headerShown: false, headerTintColor: '#593196'}}/>\n    </Stack.Navigator>\n\n   )} \n    \n    {/* <Stack.Screen name=\"Register\" component={RegisterScreen} /> */}\n    \n    {/* <Stack.Screen name=\"Chat\" component={MessagingScreen} /> */}\n    {/* <Stack.Screen name=\"Profile\" component={ProfileScreen} /> */}\n    \n   </NavigationContainer>\n  )\n}\n\nexport default Navigator"],"mappings":"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"},"metadata":{},"sourceType":"module"}