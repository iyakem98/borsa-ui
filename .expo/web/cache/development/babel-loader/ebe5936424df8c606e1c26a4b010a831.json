{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport authReducer from \"../features/auth/authSlice\";\nimport chatReducer from \"../features/chat/chatSlice\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { combineReducers } from 'redux';\nimport messageReducer from \"../features/message/messageSlice\";\nvar persistConfig = {\n  key: 'root',\n  version: 1,\n  storage: AsyncStorage\n};\nvar rootReducer = combineReducers({\n  auth: authReducer,\n  chat: chatReducer,\n  mess: messageReducer\n});\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nexport var store = configureStore({\n  reducer: persistedReducer,\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      immutableCheck: false,\n      serializableCheck: false\n    });\n  }\n});\nexport var persistor = persistStore(store);","map":{"version":3,"names":["configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","PersistGate","authReducer","chatReducer","AsyncStorage","combineReducers","messageReducer","persistConfig","key","version","storage","rootReducer","auth","chat","mess","persistedReducer","store","reducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","persistor"],"sources":["/home/dagmawi/personal/borsa/ui/borsa-ui/src/app/store.js"],"sourcesContent":["// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { configureStore } from '@reduxjs/toolkit'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport authReducer from '../features/auth/authSlice'\nimport chatReducer from '../features/chat/chatSlice'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport {combineReducers} from 'redux'\nimport messageReducer from '../features/message/messageSlice'\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage: AsyncStorage,\n}\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  chat: chatReducer,\n  mess: messageReducer\n});\nconst persistedReducer = persistReducer(persistConfig,rootReducer)\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      immutableCheck: false,\n      serializableCheck: false\n    }),\n})\n\n    // chat: chatReducer,\n    // mess: messageReducer\n  \n\nexport let persistor = persistStore(store)\n\n\n\n\n\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,SAASC,WAAW,QAAQ,iCAAiC;AAC7D,OAAOC,WAAW;AAClB,OAAOC,WAAW;AAClB,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAAQC,eAAe,QAAO,OAAO;AACrC,OAAOC,cAAc;AAErB,IAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAEN;AACX,CAAC;AACD,IAAMO,WAAW,GAAGN,eAAe,CAAC;EAClCO,IAAI,EAAEV,WAAW;EACjBW,IAAI,EAAEV,WAAW;EACjBW,IAAI,EAAER;AACR,CAAC,CAAC;AACF,IAAMS,gBAAgB,GAAGrB,cAAc,CAACa,aAAa,EAACI,WAAW,CAAC;AAElE,OAAO,IAAMK,KAAK,GAAGxB,cAAc,CAAC;EAClCyB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAE,oBAACC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,cAAc,EAAE,KAAK;MACrBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAMF,OAAO,IAAIC,SAAS,GAAG7B,YAAY,CAACuB,KAAK,CAAC"},"metadata":{},"sourceType":"module"}