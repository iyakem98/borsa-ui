{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { createRef, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport ScrollableFeed from \"../components/Chats/ScrollableFeed.js/ScrollableFeed\";\nimport io from 'socket.io-client';\nimport { ChatState } from \"../context/ChatProvider\";\nimport { fetchChat } from \"../features/chat/chatSlice\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useRoute } from '@react-navigation/native';\nimport { Camera } from \"expo-camera\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as MediaLibrary from \"expo-media-library\";\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { API_BASE_URL } from \"../utils/config\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MessagingScreen = function MessagingScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    newerMessages = _useState2[0],\n    setNewerMessages = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var _useState3 = useState(),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newmessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var chatId = route.params.chatId;\n  var userSelected = route.params.userSelected;\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messages = _useState6[0],\n    setMessages = _useState6[1];\n  var ENDPOINT = \"http://192.168.100.2:5000\";\n  var socket = useRef(null);\n  var selectedChatCompare = null;\n  var chatRouteCompare = null;\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    socketConnected = _useState8[0],\n    setsocketConnected = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    typing = _useState10[0],\n    setTyping = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isTyping = _useState12[0],\n    setIsTyping = _useState12[1];\n  var myRef = createRef();\n  var _ChatState = ChatState(),\n    selectedChat = _ChatState.selectedChat,\n    setSelectedChat = _ChatState.setSelectedChat,\n    fetchAgain = _ChatState.fetchAgain,\n    setfetchAgain = _ChatState.setfetchAgain,\n    chats = _ChatState.chats,\n    setChats = _ChatState.setChats,\n    notification = _ChatState.notification,\n    setNotification = _ChatState.setNotification,\n    sentMessage = _ChatState.sentMessage,\n    setsentMessage = _ChatState.setsentMessage,\n    receivedMessage = _ChatState.receivedMessage,\n    setreceivedMessage = _ChatState.setreceivedMessage,\n    messageSentOrReceived = _ChatState.messageSentOrReceived,\n    setmessageSentOrReceived = _ChatState.setmessageSentOrReceived,\n    chatRoute = _ChatState.chatRoute,\n    setchatRoute = _ChatState.setchatRoute;\n  var _useState13 = useState(null),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hasPermissions = _useState14[0],\n    sethasPermissions = _useState14[1];\n  var _useState15 = useState(),\n    _useState16 = _slicedToArray(_useState15, 2),\n    hasMediaLibPermissions = _useState16[0],\n    setMediaLibPermissions = _useState16[1];\n  var _useState17 = useState(null),\n    _useState18 = _slicedToArray(_useState17, 2),\n    image = _useState18[0],\n    setImage = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    getPics = _useState20[0],\n    setgetPics = _useState20[1];\n  var _useState21 = useState(true),\n    _useState22 = _slicedToArray(_useState21, 2),\n    cameraOnOff = _useState22[0],\n    setcameraOnOff = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    cameratest = _useState24[0],\n    setcameratest = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    refresh = _useState26[0],\n    setRefresh = _useState26[1];\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    expoPushToken = _useState28[0],\n    setExpoPushToken = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    pushnotification = _useState30[0],\n    setpushNotification = _useState30[1];\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  var _ChatState2 = ChatState(),\n    messageHeader = _ChatState2.messageHeader,\n    setmessageHeader = _ChatState2.setmessageHeader;\n  var publicFolder = \"http://192.168.100.2:5000/images/\";\n  console.log(image);\n  var cameraRef = useRef();\n  useLayoutEffect(function () {\n    socket.current = io(ENDPOINT);\n    socket.current.emit(\"setup\", user);\n    socket.current.on(\"connected\", function () {\n      return setsocketConnected(true);\n    });\n    socket.current.on(\"typing\", function () {\n      return setIsTyping(true);\n    });\n    socket.current.on(\"stop typing\", function () {\n      return setIsTyping(false);\n    });\n  }, []);\n  useEffect(function () {\n    fetchMessage();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n  useEffect(function () {\n    chatRouteCompare = chatRoute;\n    console.log(chatRouteCompare);\n  }, []);\n  useEffect(function () {});\n  useEffect(function () {}, []);\n  useEffect(function () {\n    testCamera();\n  }, []);\n  useEffect(function () {\n    null;\n  }, [refresh]);\n  useEffect(function () {\n    UpdateUserRoute();\n  }, []);\n  useEffect(function () {\n    console.log(route.params.userSelected._id);\n    console.log(\"messagessssssssssssssssss are:\", messages);\n    console.log(\"messssssssage infooooooo:\", {\n      content: newmessage,\n      chatId: chatId,\n      image: \"\",\n      receiver: route.params.userSelected._id\n    });\n  }, []);\n  function sendPushNotification(_x) {\n    return _sendPushNotification.apply(this, arguments);\n  }\n  function _sendPushNotification() {\n    _sendPushNotification = _asyncToGenerator(function* (expoPushToken) {\n      var message = {\n        to: expoPushToken,\n        sound: 'default',\n        title: 'Original Title',\n        body: 'And here is the body!',\n        data: {\n          someData: 'goes here'\n        }\n      };\n      yield fetch('https://exp.host/--/api/v2/push/send', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Accept-encoding': 'gzip, deflate',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(message)\n      });\n    });\n    return _sendPushNotification.apply(this, arguments);\n  }\n  var testNotif = function () {\n    var _ref = _asyncToGenerator(function* (Newmessage) {\n      console.log(Newmessage.sender._id);\n      var chat = Newmessage.chat;\n      chat.users.forEach(function (tuser) {\n        if (tuser._id == Newmessage.sender._id && Newmessage.receiver) console.log('notif received');\n      });\n    });\n    return function testNotif(_x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  function registerForPushNotificationsAsync() {\n    return _registerForPushNotificationsAsync.apply(this, arguments);\n  }\n  function _registerForPushNotificationsAsync() {\n    _registerForPushNotificationsAsync = _asyncToGenerator(function* () {\n      var token;\n      if (Device.isDevice) {\n        var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n          existingStatus = _yield$Notifications$.status;\n        var finalStatus = existingStatus;\n        if (existingStatus !== 'granted') {\n          var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n            status = _yield$Notifications$2.status;\n          finalStatus = status;\n        }\n        if (finalStatus !== 'granted') {\n          alert('Failed to get push token for push notification!');\n          return;\n        }\n        token = (yield Notifications.getExpoPushTokenAsync()).data;\n        console.log(token);\n      } else {\n        alert('Must use physical device for Push Notifications');\n      }\n      if (Platform.OS === 'android') {\n        Notifications.setNotificationChannelAsync('default', {\n          name: 'default',\n          importance: Notifications.AndroidImportance.MAX,\n          vibrationPattern: [0, 250, 250, 250],\n          lightColor: '#FF231F7C'\n        });\n      }\n      return token;\n    });\n    return _registerForPushNotificationsAsync.apply(this, arguments);\n  }\n  var UpdateUserRoute = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log(route.name);\n        var userId = user._id;\n        console.log(userId);\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$put = yield axios.put(API_BASE_URL + \"users/route\", {\n            userId: user._id,\n            route: route.name\n          }, config),\n          data = _yield$axios$put.data;\n        console.log('user route updated');\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function UpdateUserRoute() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var testCamera = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var mediaPermissions = yield MediaLibrary.requestPermissionsAsync();\n      var cameraStatus = yield Camera.requestCameraPermissionsAsync();\n      sethasPermissions(cameraStatus.status === 'granted');\n      setMediaLibPermissions(mediaPermissions.status === 'granted');\n    });\n    return function testCamera() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var takePic = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var options = {\n        quality: 1,\n        base64: true,\n        exif: false\n      };\n      var newPhoto = yield cameraRef.current.takePictureAsync(options);\n      console.log(newPhoto.uri);\n      setImage(newPhoto);\n    });\n    return function takePic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var storeNotifcation = function () {\n    var _ref5 = _asyncToGenerator(function* (notification, chat) {\n      try {\n        yield AsyncStorage.removeItem(\"notification\");\n        yield AsyncStorage.removeItem(\"chat\");\n        yield AsyncStorage.setItem(\"notification\", JSON.stringify(notification));\n        yield AsyncStorage.setItem(\"notifChat\", JSON.stringify(chat));\n        console.log('notif stored');\n      } catch (err) {\n        console.log(\"cannot store notificaiton/chat\");\n      }\n    });\n    return function storeNotifcation(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var CameraFeature = function CameraFeature() {\n    console.log(\"hi \");\n    setcameratest(true);\n  };\n  var sendMessage = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      console.log(\"sendinggggggggggggggg\");\n      var tym = moment(new Date()).format(\"LT\");\n      var nw = {\n        content: newmessage,\n        time: tym\n      };\n      var m = newerMessages;\n      m = newerMessages.push(nw);\n      setNewMessage(m);\n      try {\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$post = yield axios.post(API_BASE_URL + \"message\", {\n            content: newmessage,\n            chatId: chatId,\n            image: \"\",\n            receiver: route.params.userSelected._id\n          }, config),\n          data = _yield$axios$post.data;\n        testNotif(data);\n        setImage(null);\n        setNewMessage(\"\");\n        setNewerMessages([]);\n        socket.current.emit(\"new message\", data);\n        setMessages([].concat(_toConsumableArray(messages), [data]));\n        setmessageSentOrReceived(false);\n        setfetchAgain(true);\n        setfetchAgain(false);\n        myRef.scrollTo(0, myRef.scrollHeight);\n        return data;\n      } catch (error) {}\n    });\n    return function sendMessage() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var fetchMessage = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$get = yield axios.get(API_BASE_URL + \"message/\" + chatId, config),\n          data = _yield$axios$get.data;\n        setMessages(data);\n        console.log(\"messssssssssssssssssssssss:\", data);\n        setMessages(function (state) {\n          return state;\n        });\n        socket.current.emit(\"join chat\", chatId);\n        return data;\n      } catch (error) {}\n    });\n    return function fetchMessage() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var saveImg = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      var options = {\n        quality: 1,\n        base64: false,\n        storageOptions: {\n          skipBackup: true,\n          path: 'images'\n        }\n      };\n      var formData = new FormData();\n      var testData = {\n        content: \"\",\n        chatId: chatId\n      };\n      var newPhoto = yield cameraRef.current.takePictureAsync(options);\n      setImage(newPhoto);\n      var filename = newPhoto.uri.split('/').pop();\n      formData.append('image', {\n        name: filename,\n        uri: newPhoto.uri,\n        type: 'image/jpg'\n      });\n      formData.append('content', testData.content);\n      formData.append('chatId', testData.chatId);\n      try {\n        var config = {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'multipart/form-data',\n            'Authorization': \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$post2 = yield axios.post(\"http://192.168.100.2:5000/api/message/\", formData, config),\n          data = _yield$axios$post2.data;\n        socket.current.emit(\"new message\", data);\n        setMessages([].concat(_toConsumableArray(messages), [data]));\n        setmessageSentOrReceived(false);\n        setfetchAgain(true);\n        setfetchAgain(false);\n        console.log('message + image saved successfully');\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function saveImg() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var getImgs = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      try {\n        var _yield$axios$get2 = yield axios.get(\"http://192.168.100.2:5000/api/images/retrieveImg\"),\n          data = _yield$axios$get2.data;\n        setgetPics(data);\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n    return function getImgs() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var typingHandler = function typingHandler(e) {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      setTyping(true);\n      socket.current.emit('typing', chatId);\n    }\n    var lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(function () {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.current.emit(\"stop typing\", chatId);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  if (hasPermissions === undefined) {\n    return;\n    _jsx(_Fragment, {\n      children: _jsx(Text, {\n        children: \"Requesting permissions...\"\n      })\n    });\n  } else if (!hasPermissions) {\n    return;\n    _jsx(_Fragment, {\n      children: _jsx(Text, {\n        style: {\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        children: \"Permission for camera not granted. Please change this in settings.\"\n      })\n    });\n  }\n  if (cameratest) {\n    return;\n    _jsx(View, {\n      style: styles.container2,\n      children: _jsxs(Camera, {\n        style: styles.camera,\n        ref: cameraRef,\n        children: [_jsx(Pressable, {\n          onPress: function onPress() {\n            setcameratest(false);\n            setmessageHeader(false);\n            setRefresh(false);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"close-outline\",\n            size: 50,\n            color: \"white\",\n            style: styles.close\n          })\n        }), _jsx(Pressable, {\n          style: styles.text2,\n          onPress: function onPress() {\n            setRefresh(true);\n            saveImg();\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"camera-iris\",\n            size: 60,\n            color: \"white\",\n            style: styles.minicamera\n          })\n        })]\n      })\n    });\n  }\n  return _jsx(_Fragment, {\n    children: _jsx(ScrollView, {\n      style: {},\n      children: _jsxs(KeyboardAwareScrollView, {\n        children: [_jsxs(View, {\n          ref: myRef,\n          style: {\n            marginBottom: 50,\n            backgroundColor: \"white\"\n          },\n          children: [_jsx(ScrollableFeed, {\n            messages: messages\n          }), _jsx(View, {\n            style: {\n              backgroundColor: \"#fff\",\n              marginTop: 5\n            },\n            children: newerMessages && newerMessages.map(function (msg, index) {\n              return _jsxs(View, {\n                style: {\n                  alignSelf: \"flex-end\",\n                  marginRight: 10,\n                  backgroundColor: \"#593196\",\n                  padding: 6,\n                  marginBottom: 5,\n                  borderRadius: 8\n                },\n                children: [_jsx(Text, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: msg.content\n                }), _jsxs(Text, {\n                  style: {\n                    color: \"white\"\n                  },\n                  children: [msg.time, \"\\xA0\\xA0\", _jsx(Ionicons, {\n                    name: \"checkmark-outline\",\n                    size: 14,\n                    color: \"white\",\n                    style: {\n                      opacity: .5\n                    }\n                  })]\n                })]\n              }, index);\n            })\n          })]\n        }), _jsxs(SafeAreaView, {\n          style: {\n            position: 'absolute',\n            left: 0,\n            right: 0,\n            bottom: 5,\n            flexDirection: \"row\",\n            backgroundColor: \"#f9f8fc\",\n            padding: 0,\n            paddingHorizontal: 10\n          },\n          behavior: \"position\",\n          children: [isTyping ? _jsx(View, {\n            children: _jsx(Text, {\n              children: \" isloading... \"\n            })\n          }) : null, _jsx(TextInput, {\n            value: newmessage,\n            onChangeText: function onChangeText(newText) {\n              return setNewMessage(newText);\n            },\n            onChange: typingHandler,\n            style: styles.input,\n            placeholder: \"Type your message...\",\n            onKeyPress: function onKeyPress(keyPress) {\n              if (keyPress.key == \"Enter\") {\n                sendMessage();\n              }\n            }\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              sendMessage();\n            },\n            children: _jsx(MaterialIcons, {\n              name: \"send\",\n              size: 24,\n              color: \"#17141f\"\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default MessagingScreen;\nvar styles = StyleSheet.create({\n  sendingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text2: {\n    color: \"green\",\n    marginTop: \"150%\",\n    marginLeft: 165,\n    justifyContent: \"center\",\n    width: \"40%\"\n  },\n  minicamera: {\n    height: 100\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  close: {\n    marginLeft: 350,\n    marginTop: 40\n  },\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: \"#f9f8fc\",\n    padding: 5,\n    paddingHorizontal: 10\n  },\n  input: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 5,\n    paddingHorizontal: 10,\n    marginHorizontal: 10,\n    marginRight: 20,\n    borderRadius: 50,\n    borderColor: \"lightgray\",\n    borderWidth: StyleSheet.hairlineWidth\n  },\n  camera: {\n    marginTop: 0,\n    fontSize: 20\n  },\n  text: {\n    marginTop: 20\n  },\n  container2: {},\n  container3: {},\n  camera: {\n    height: \"100%\"\n  },\n  preview: {\n    alignSelf: 'stretch',\n    flex: 1\n  }\n});","map":{"version":3,"names":["Ionicons","useDispatch","useSelector","AntDesign","MaterialIcons","SafeAreaView","createRef","useEffect","useLayoutEffect","useRef","useState","axios","ScrollableFeed","io","ChatState","fetchChat","AsyncStorage","useRoute","Camera","MaterialCommunityIcons","MediaLibrary","Device","Notifications","API_BASE_URL","KeyboardAwareScrollView","moment","MessagingScreen","newerMessages","setNewerMessages","state","auth","user","newmessage","setNewMessage","route","dispatch","chatId","params","userSelected","messages","setMessages","ENDPOINT","socket","selectedChatCompare","chatRouteCompare","socketConnected","setsocketConnected","typing","setTyping","isTyping","setIsTyping","myRef","selectedChat","setSelectedChat","fetchAgain","setfetchAgain","chats","setChats","notification","setNotification","sentMessage","setsentMessage","receivedMessage","setreceivedMessage","messageSentOrReceived","setmessageSentOrReceived","chatRoute","setchatRoute","hasPermissions","sethasPermissions","hasMediaLibPermissions","setMediaLibPermissions","image","setImage","getPics","setgetPics","cameraOnOff","setcameraOnOff","cameratest","setcameratest","refresh","setRefresh","expoPushToken","setExpoPushToken","pushnotification","setpushNotification","notificationListener","responseListener","messageHeader","setmessageHeader","publicFolder","console","log","cameraRef","current","emit","on","fetchMessage","testCamera","UpdateUserRoute","_id","content","receiver","sendPushNotification","message","to","sound","title","body","data","someData","fetch","method","headers","Accept","JSON","stringify","testNotif","Newmessage","sender","chat","users","forEach","tuser","registerForPushNotificationsAsync","token","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","userId","config","Authorization","put","err","mediaPermissions","cameraStatus","requestCameraPermissionsAsync","takePic","options","quality","base64","exif","newPhoto","takePictureAsync","uri","storeNotifcation","removeItem","setItem","CameraFeature","sendMessage","tym","Date","format","nw","time","m","push","post","scrollTo","scrollHeight","error","get","saveImg","storageOptions","skipBackup","path","formData","FormData","testData","filename","split","pop","append","type","getImgs","typingHandler","e","target","value","lastTypingTime","getTime","timerLength","setTimeout","timeNow","timeDiff","undefined","position","top","left","transform","styles","container2","camera","close","text2","minicamera","marginBottom","backgroundColor","marginTop","map","msg","index","alignSelf","marginRight","padding","borderRadius","color","opacity","right","bottom","flexDirection","paddingHorizontal","newText","input","keyPress","key","StyleSheet","create","sendingContainer","justifyContent","alignItems","marginLeft","width","height","loadingContainer","flex","container","marginHorizontal","borderColor","borderWidth","hairlineWidth","fontSize","text","container3","preview"],"sources":["/home/dagmawi/personal/borsa/myborsa/borsa-ui/src/screens/MessagingScreen.js"],"sourcesContent":["import { TouchableOpacity, View, StyleSheet, TextInput, KeyboardAvoidingView, Button, Pressable, Text, Image, Platform, Keyboard, ScrollView} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {AntDesign, MaterialIcons} from '@expo/vector-icons'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { createRef, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport ScrollableFeed from '../components/Chats/ScrollableFeed.js/ScrollableFeed';\nimport io from 'socket.io-client'\nimport { ChatState } from '../context/ChatProvider';\nimport { fetchChat } from '../features/chat/chatSlice';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useRoute } from '@react-navigation/native'\nimport {Camera} from \"expo-camera\"\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as MediaLibrary from \"expo-media-library\"\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { API_BASE_URL } from '../utils/config';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n// import { MMKV } from 'react-native-mmkv'\n\nimport moment from 'moment'\n\n\n\n// export const storage = new MMKV()\n\nconst MessagingScreen = () => {\n\n  const [newerMessages, setNewerMessages] = useState([])\n \n  const { user } = useSelector((state) => state.auth)\n  const [newmessage, setNewMessage] = useState();\n  const route = useRoute()\n  const dispatch = useDispatch()\n  const {chatId} = route.params;\n  const {userSelected} = route.params;\n  const [messages, setMessages] = useState([])\n  const ENDPOINT = \"http://192.168.100.2:5000\"\n  var socket = useRef(null)\n  var selectedChatCompare = null;\n  var chatRouteCompare = null\n  const [socketConnected, setsocketConnected] = useState(false)\n  const [typing, setTyping] = useState(false)\n  const [isTyping, setIsTyping] = useState(false)\n\n\n  const myRef = createRef()\n\n  const { \n    selectedChat, \n    setSelectedChat,\n    fetchAgain,\n     setfetchAgain,  \n     chats, \n     setChats, \n     notification, \n     setNotification, \n     sentMessage, \n     setsentMessage, \n     receivedMessage, \n    setreceivedMessage,\n    messageSentOrReceived, setmessageSentOrReceived,\n    chatRoute, setchatRoute\n    } = ChatState(); \n  // const [mesages, setMesages] = useState()\n  // const defaultOptions = {\n  //   loop: true,\n  //   autoplay: true,\n  //   animationData: animationData,\n  //   rendererSettings: {\n  //     preserveAspectRatio: \"xMidYMid slice\",\n  //   },\n  // };\n  \n  const [hasPermissions, sethasPermissions] = useState(null)\n  const [hasMediaLibPermissions, setMediaLibPermissions] = useState()\n  const [image, setImage] = useState(null)\n  const [getPics, setgetPics] = useState([])\n  const [cameraOnOff, setcameraOnOff] = useState(true)\n  const [cameratest, setcameratest] = useState(false)\n  const [refresh, setRefresh] = useState(false)\n  const [expoPushToken, setExpoPushToken] = useState('');\n  const [pushnotification, setpushNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  const {messageHeader, setmessageHeader} = ChatState()\n  const publicFolder = \"http://192.168.100.2:5000/images/\"\n  // Notifications.setNotificationHandler({\n  //   handleNotification: async () => ({\n  //     shouldShowAlert: true,\n  //     shouldPlaySound: false,\n  //     shouldSetBadge: false,\n  //   }),\n  // });\n  // console.log(messageHeader)\n  console.log(image)\n  const cameraRef = useRef()\n  useLayoutEffect(() => {\n  \n    // fetchMessage()\n    socket.current = io(ENDPOINT)\n    socket.current.emit(\"setup\", user);\n    // socket.emit(\"findChat\", chatId)\n    socket.current.on(\"connected\", () => setsocketConnected(true) )\n   \n    socket.current.on(\"typing\", () => setIsTyping(true))\n    socket.current.on(\"stop typing\", () => setIsTyping(false))\n   \n    \n  }, [])\n  useEffect(() =>{\n// console.log(\"Platfffffffffform\", Platform.OS)\n    fetchMessage()\n    selectedChatCompare = selectedChat\n    // console.log(notification)\n   \n  \n    // console.log(fetchAgain)\n  \n  }, [selectedChat])\n  useEffect(() =>{\n    chatRouteCompare = chatRoute\n    console.log(chatRouteCompare)\n  \n  }, [])\n\n  // console.log(notification)\n  // useEffect(() => {\n  //   // console.log(chatId)\n  //   // console.log(socket.current)\n  //   // console.log(selectedChat._id)\n  //   // setNotification([100]);\n  //   //     setNotification((state) => {\n  //   //           console.log(state)\n  //   //           return state\n  //   //         })\n  //   socket.current.on(\"message recieved\", (newMessageReceived) => {\n  //    console.log(newMessageReceived.chat)\n  //     if(!selectedChatCompare || selectedChatCompare._id !== newMessageReceived.chat._id){\n  //       console.log(newMessageReceived.chat)\n        \n  //       if (!notification.includes(newMessageReceived)) {\n  //         setNotification([ newMessageReceived]);\n  //         console.log(notification)\n  //         setNotification((state) => {\n  //           console.log(state)\n  //           return state\n  //         })\n  //         setfetchAgain(!fetchAgain)\n  //         setfetchAgain((state) => {\n  //           console.log(state)\n  //           return state\n  //         })\n          \n          \n  //       }\n          \n  //       }\n      \n  //     // else{\n  //     //   setMessages([...messages, newMessageReceived])\n  //     // }\n      \n  //   })\n   \n  // })\n  useEffect(() => {\n    // socket.current.on(\"message recieved\", (newMessageReceived) => {\n    //   // console.log('message received')\n    //   // if(newMessageReceived.receiver.route != \"Messaging\")\n    //   // testNotif(newMessageReceived)\n    // //  console.log(newMessageReceived.chat._id)\n    // //  console.log(newMessageReceived.chat)\n    // //  if((!selectedChatCompare)  ||  selectedChatCompare._id !== newMessageReceived.chat._id || (chatRouteCompare)  ){\n    // //  if((newMessageReceived.receiver.route == \"Chats\")){\n    // //   console.log('notif received')\n    // // if (!notification.includes({newMessageReceived})) {\n    // //     // console.log(newMessageReceived.chat)\n    // //             setNotification([...notification,  newMessageReceived]);\n    // //             // console.log(notification)\n    // //             setNotification((state) => {\n    // //               // console.log(state)\n    // //               return state\n    // //             })\n    // //             // console.log(notification)\n    // //             storeNotifcation(notification, {chatUsers: newMessageReceived.chat.users, chatId: newMessageReceived.chat._id })\n    // //             // storeNotifcation(notification)\n               \n                \n    // //             setfetchAgain(!fetchAgain)\n    // //             setfetchAgain((state) => {\n    // //               // console.log(state)\n    // //               return state\n    // //             })\n    // //             // console.log(fetchAgain)\n    // //  }\n\n    // // }\n    // // else{\n    // //   console.log('notif not received')\n    // //   setMessages([...messages, newMessageReceived])\n    // //   // setreceivedMessage(true)\n    // // }   \n\n         \n    //  })\n\n  })\n  useEffect(() => {\n    // registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n\n    // notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n    //   setNotification(notification);\n    // });\n\n    // responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n    //   console.log(response);\n    // });\n\n    // return () => {\n    //   Notifications.removeNotificationSubscription(notificationListener.current);\n    //   Notifications.removeNotificationSubscription(responseListener.current);\n    // };\n  }, []);\n  // search how to run an async func in react \n useEffect(() => {\n  testCamera();\n }, [])\n useEffect(() => {\n null\n  // setImage(null)\n }, [refresh])\n useEffect(() => {\n UpdateUserRoute()\n//  console.log(route.name)\n  // setImage(null)\n }, [])\n useEffect(() => {\n//  UpdateUserRoute()\n console.log(route.params.userSelected._id)\n console.log(\"messagessssssssssssssssss are:\", messages)\n\nconsole.log(\"messssssssage infooooooo:\",\n{\ncontent : newmessage,\nchatId: chatId,\nimage: \"\",\nreceiver: route.params.userSelected._id\n}\n)\n  // setImage(null)\n }, [])\n async function sendPushNotification(expoPushToken) {\n  const message = {\n    to: expoPushToken,\n    sound: 'default',\n    title: 'Original Title',\n    body: 'And here is the body!',\n    data: { someData: 'goes here' },\n  };\n\n  await fetch('https://exp.host/--/api/v2/push/send', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Accept-encoding': 'gzip, deflate',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  });\n}\nconst testNotif = async (Newmessage) => {\n  \n  console.log(Newmessage.sender._id)\n  // socket.current.on(\"message recieved\", (newMessageReceived) => {\n  //   console.log('notification received')\n   \n       \n  //  })\n  var chat = Newmessage.chat;\n  // //   console.log( message.receiver._id)\n  //   if (!chat.users) return console.log(\"chat.users not defined\");\n    \n\n    chat.users.forEach( (tuser) => {\n      if (tuser._id == Newmessage.sender._id && Newmessage.receiver ) console.log('notif received')\n        // console.log('push notif recieved')\n        // await sendPushNotification(expoPushToken);\n      ;\n      \n      \n    });\n  // console.log(message.receiver.route)\n  // await sendPushNotification(expoPushToken);\n   \n    \n  }\n\n\nasync function registerForPushNotificationsAsync() {\n  let token;\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    alert('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token;\n}\n const UpdateUserRoute = async () => {\n    \n    try{\n      console.log(route.name)\n      const userId = user._id\n      console.log(userId)\n      const   config = {\n          \n        headers: {\n         \n          Authorization: `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n  \n      const {data} = await axios.put(`${API_BASE_URL}users/route`,{\n        userId: user._id,\n        route: route.name\n        \n      }, config)\n      console.log('user route updated')\n      // console.log(data.lastSeen)\n      // setlastseendateandtime(moment(data.lastSeen).format(\"dddd, MMMM Do YYYY\") + \" \" + moment(data.lastSeen).format(\"LT\"))\n\n    }\n    catch(err){\n      console.log(err)\n    }\n    \n   }\n\n \n const testCamera = async () =>{\n  const mediaPermissions = await MediaLibrary.requestPermissionsAsync()\n  const cameraStatus = await Camera.requestCameraPermissionsAsync()\n  sethasPermissions(cameraStatus.status === 'granted')\n  setMediaLibPermissions(mediaPermissions.status === 'granted')\n }\n let takePic = async () => {\nlet options = {\nquality: 1,\nbase64: true,\nexif: false\n};\n\nlet newPhoto = await cameraRef.current.takePictureAsync(options);\nconsole.log(newPhoto.uri)\nsetImage(newPhoto);\n};\n  const storeNotifcation = async(notification, chat) => {\n    try{\n          await AsyncStorage.removeItem(\"notification\")\n          await AsyncStorage.removeItem(\"chat\")\n      // console.log(notification)\n          await  AsyncStorage.setItem(\"notification\", JSON.stringify(notification))\n        //  await AsyncStorage.getItem('notification')\n          await  AsyncStorage.setItem(\"notifChat\", JSON.stringify(chat))\n          console.log('notif stored')\n          // const getChatnotif = await AsyncStorage.getItem('notifChat')\n        // // const chatnotif = await  AsyncStorage.setItem(\"notifChat\", JSON.stringify(chat))\n\n        // console.log(JSON.parse(getChatnotif))\n        // // console.log(AsyncStorage.getItem(JSON.parse(chatnotif)))\n    }\n    catch(err){\n      console.log(\"cannot store notificaiton/chat\")\n    }\n      \n   \n  }\n  \n//     useLayoutEffect(() =>{\n//       socket.on(\"message recieved\", (newMessageReceived) => {\n//         setMessages([...messages, newMessageReceived])\n//       })\n//     // fetchMessage()\n    \n//  }, [socket])\nconst CameraFeature = () => {\n  console.log(\"hi \")\n  setcameratest(true)\n  // return <Camera\n  // >\n\n  // </Camera>\n  // return <View style={styles.camera}>\n  //         <Text>Goat</Text>\n  //     </View>\n}\n  const sendMessage = async() => {\n    console.log(\"sendinggggggggggggggg\")\n    let tym = moment(new Date()).format(\"LT\")\n    let nw = {\n      content: newmessage,\n      time: tym\n    }\n    let m = newerMessages\n    m = newerMessages.push(nw)\n    setNewMessage(m)\n    try{\n    //   const config = {\n    //     headers: {\n    //         Authorization: `Bearer ${user.token}`\n\n    //     }\n    // }\n    // let options = {\n    //   quality: 1,\n    //   base64: false,\n    //   // exif: true,\n    //   storageOptions: {\n    //     skipBackup: true,\n    //     path: 'images'\n    //    }\n    // };\n    // const formData = new FormData()\n    // let newPhoto = await cameraRef.current.takePictureAsync(options);\n    // setImage(newPhoto)\n    //setNewMessage(\"\")\n    \n      const config = {\n          \n        headers: {\n         \n          Authorization: `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n     \n   \n \n    const {data} = await axios.post(`${API_BASE_URL}message`, {\n      content : newmessage,\n      chatId: chatId,\n      image: \"\",\n      receiver: route.params.userSelected._id\n    },\n    config)\n    testNotif(data)\n    setImage(null)\n    // console.log(\"message sent successfully\")\n    setNewMessage(\"\")\n    setNewerMessages([])\n   \n    \n  socket.current.emit(\"new message\", data)\n  setMessages([...messages, data])\n  setmessageSentOrReceived(false)\n  setfetchAgain(true)\n  setfetchAgain(false)\n\n  myRef.scrollTo(0, myRef.scrollHeight)\n  \n  return data\n    \n    \n   \n  \n   \n    }\n    catch(error){\n      // console.log('sending message is not possible')\n    }\n  }\n  \n  const fetchMessage = async() => {\n    try{\n      const config = {\n        headers: {\n            Authorization: `Bearer ${user.token}`\n\n        }\n    }\n\n   \n    const {data} = await axios.get(`${API_BASE_URL}message/${chatId}`,\n    config)\n    \n    // console.log(data)\n    // console.log(mesages) \n    setMessages(data)\n\n    console.log(\"messssssssssssssssssssssss:\", data)\n    setMessages((state) => {\n      // console.log(state)\n      return state\n    })\n    socket.current.emit(\"join chat\", chatId)\n    return data;\n   \n    }\n    catch(error){\n      // console.log('fetching message is not possible')\n    }\n\n  }\n  const saveImg = async () => {\n    let options = {\n      quality: 1,\n      base64: false,\n      // exif: true,\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n       }\n    };\n    const formData = new FormData()\n   const testData ={\n    content: \"\",\n    chatId: chatId\n   }\n    let newPhoto = await cameraRef.current.takePictureAsync(options);\n    setImage(newPhoto)\n    let filename = newPhoto.uri.split('/').pop();\n    // console.log(filename)\n    // console.log(newPhoto)\n    // // console.log(data:image/jpg + base64newPhoto.base64)\n    formData.append('image', {\n      name: filename,\n      uri: newPhoto.uri ,\n      type: 'image/jpg',\n    });\n    formData.append('content', testData.content);\n    formData.append('chatId', testData.chatId);\n    // console.log(formData)\n    // console.log('end of line here ')\n    // formData.append('content', null);\n    // formData.append('chatId', chatId);\n  \n    // console.log(newPhoto.data)\n    // const data = await axios.post(\"http://192.168.100.2:5000/api/images/addImg\", newPhoto.uri)\n    // setImage(newPhoto);\n  //  console.log(formData)\n    try{\n      \n      // const config = {\n        \n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'multipart/form-data',\n      //     Authorization: `Bearer ${user.token}`\n\n\n      //   },\n      //   body: JSON.stringify({\n      //     imgsource: newPhoto.base64,\n      //   }),\n      //   body: formData\n      //  };\n      const config = {\n          \n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n\n    const {data} = await axios.post(\"http://192.168.100.2:5000/api/message/\",formData, config)\n    //   headers: {\n    //     Accept: 'application/json',\n    //     'Content-Type': 'multipart/form-data',\n    //   },\n    // })\n    // setcameratest(false)\n    // setmessageHeader(false)\n    // setImage(null)\n    socket.current.emit(\"new message\", data)\n  setMessages([...messages, data])\n  setmessageSentOrReceived(false)\n  setfetchAgain(true)\n  setfetchAgain(false)\n    console.log('message + image saved successfully')\n    // const data = await axios.get(\"http://192.168.100.2:5000/api/images/getImg\")\n    //   console.log(data)\n    // console.log('image retrieved successfully')\n\n\n  }\n  \n    \n  catch (error) {\n    console.log(error);\n  }\n\n  }\n  const getImgs = async() => {\n    // console.log(\"try\")\n    try{\n      const {data} = await  axios.get(\"http://192.168.100.2:5000/api/images/retrieveImg\")\n      setgetPics(data)\n      // console.log(data)\n    }\n    catch(err){\n      console.log(err.message)\n    }\n    \n  }\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value)\n     \n    if(!socketConnected) return\n\n    if(!typing) {\n     setTyping(true)\n     socket.current.emit('typing', chatId);\n    }\n\n    let lastTypingTime = new Date().getTime()\n    var timerLength = 3000\n    setTimeout(() => {\n     var timeNow = new Date().getTime();\n     var timeDiff = timeNow - lastTypingTime;\n\n     if(timeDiff >= timerLength && typing) {\n         socket.current.emit(\"stop typing\", chatId)\n         setTyping(false)\n     }\n    }, timerLength);\n }\n\n if (hasPermissions === undefined) {\n  return \n  (\n    <>\n  <Text>Requesting permissions...</Text>\n  </>\n  )\n} else if (!hasPermissions) {\n  return \n  (\n    <>\n  <Text style={{position:\"fixed\", top:\"50%\", left:\"50%\", transform:\"translate(-50%, -50%)\"}}>\n    Permission for camera not granted. Please change this in settings.</Text>\n    </>\n  )\n}\n\nif(cameratest){\n  // return <Text style={styles.text}>cemera test</Text>\n  return \n  (\n  <View style={styles.container2}>\n  \n   \n    <Camera\n      style={styles.camera}\n      ref={cameraRef}\n      // autoFocus={null}\n      >\n           {/* <Pressable  style={styles.text2} onPress={takePic}>\n           <Ionicons name=\"md-camera-reverse-outline\" size={24} color=\"black\" />\n           </Pressable> */}\n           <Pressable onPress={() => {\n            setcameratest(false)\n            setmessageHeader(false)\n            setRefresh(false)\n           }}>\n           <MaterialCommunityIcons name=\"close-outline\" size={50} color=\"white\"  style={styles.close}/>\n           </Pressable>\n           <Pressable  style={styles.text2} \n           onPress={()=> {\n        setRefresh(true)\n         saveImg()\n         \n         // sendMessage()\n          \n          // getImgs()\n          // setcameraOnOff(false)\n          \n            } }\n           >\n          <MaterialCommunityIcons name=\"camera-iris\" size={60} color=\"white\" style={styles.minicamera} />\n       </Pressable>\n      \n      </Camera>\n      {/* <View>\n      {getPics && getPics.map(img => {\n        \n        console.log(publicFolder + img.image)\n        // return <Text key={img._id}>{img.image}</Text>\n        return <Image key={img._id} style={styles.img} source={{uri: `http://192.168.100.2:5000/images/${img.image}` }} />\n        \n      })}\n      </View> */}\n     \n \n \n</View>\n  )\n}\n\n// if(image){\n//   const savePhoto = () => {\n//       MediaLibrary.saveToLibraryAsync(image.uri).then(() => {\n//           setImage(undefined);\n//         });\n\n//   }\n//   return (\n//       <SafeAreaView style={styles.container2}>\n//         <Image style={styles.preview} source={{ uri: \"data:image/jpg;base64,\" + image.base64 }} />\n//         {/* <Button title=\"Share\" onPress={sharePic} /> */}\n//         {hasMediaLibPermissions ? <Button title=\"Save\" onPress={savePhoto} /> : undefined}\n//         <Button title=\"Discard\" onPress={() => setImage(undefined)} />\n//       </SafeAreaView>\n//     );\n//   }\n  \n\n\n \n\n  return (\n   \n<>\n\n<ScrollView style={{}}>\n\n  <KeyboardAwareScrollView>\n    <View ref={myRef} style={{marginBottom:50, backgroundColor:\"white\"}}>\n    <ScrollableFeed messages={messages} />\n    <View style={{backgroundColor:\"#fff\", marginTop:5}}>\n          {\n              newerMessages && newerMessages.map((msg, index) => (\n                   <View key={index} style={{\n                    alignSelf:\"flex-end\",\n                    marginRight:10,\n                    backgroundColor:\"#593196\",\n                    padding:6,\n                    marginBottom:5,\n                    borderRadius:8\n                   }}>\n                    <Text style={{color:\"white\",}}>{msg.content}</Text>\n                    <Text style={{color:\"white\"}}>{msg.time}\n                      &nbsp;&nbsp;\n                    <Ionicons name=\"checkmark-outline\" size={14} color=\"white\" style={{opacity:.5}}/>\n                </Text>\n                   </View>\n                ))\n          }\n</View>\n    </View>\n\n\n   <SafeAreaView style={{position: 'absolute', left: 0, right: 0, bottom: 5, flexDirection: \"row\",\n   backgroundColor: \"#f9f8fc\",\n   padding: 0,\n   paddingHorizontal: 10,\n  }}\n   behavior=\"position\"> \n   {/* <AntDesign name='plus' size = {24} color = \"#593196\"/> */}\n    {isTyping ? <View>\n    <Text> isloading... </Text>\n    </View> : null}\n   <TextInput \n      value={newmessage}\n      onChangeText={(newText)=>setNewMessage(newText)}\n      onChange={typingHandler}\n      style = {styles.input}\n      placeholder='Type your message...'\n      onKeyPress={(keyPress) => {\n        if(keyPress.key==\"Enter\"){\n          sendMessage()\n        }\n      }}\n      />\n   \n    <TouchableOpacity onPress={() => {\n     sendMessage()\n      }\n    }>\n    <MaterialIcons name='send' size={24} color = \"#17141f\"/>\n    </TouchableOpacity>\n  \n</SafeAreaView> \n</KeyboardAwareScrollView>\n</ScrollView>\n\n</>  \n    \n  \n  \n   \n  )\n}\n\n\n\nexport default MessagingScreen\n\nconst styles = StyleSheet.create({\n  sendingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text2: {\n    color: \"green\",\n    \n    marginTop: \"150%\",\n    \n    marginLeft: 165,\n    // borderColor: \"red\",\n    // borderWidth: 10,\n    justifyContent: \"center\",\n    width: \"40%\"\n\n\n },\n minicamera: {\n  height: 100\n },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  close: {\n    marginLeft: 350,\n    marginTop: 40\n  },\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: \"#f9f8fc\",\n    padding: 5,\n    paddingHorizontal: 10,\n},\ninput: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 5,\n    paddingHorizontal: 10,\n    marginHorizontal: 10,\n    marginRight:20,\n    borderRadius: 50,\n    borderColor: \"lightgray\",\n    borderWidth: StyleSheet.hairlineWidth,\n},\ncamera: {\n   marginTop: 0,\n   fontSize: 20\n},\ntext :{\n  marginTop: 20\n},\ncontainer2: {\n  // flex:1,\n  // marginTop: 200,\n  // marginLeft: 180,\n  // backgroundColor: \"black\"\n},\ncontainer3: {\n  // flex:1,\n  // marginTop: 200,\n  // marginLeft: 180,\n  // backgroundColor: \"black\"\n},\ncamera: {   \n  // flex: 1,\n height: \"100%\"\n},\npreview: {\n  alignSelf: 'stretch',\n  flex: 1\n}\n\n  \n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}