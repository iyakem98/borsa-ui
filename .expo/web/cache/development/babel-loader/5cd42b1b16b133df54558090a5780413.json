{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { singleChat } from \"../features/chat/chatSlice\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction UserRecently(_ref) {\n  var data = _ref.data,\n    userData = _ref.userData;\n  console.log(userData.userName);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedUserData = _useState2[0],\n    setselectedUserData = _useState2[1];\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var formatted_date = data.lastSeen;\n  var _useState3 = useState(userData.userName),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userName = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(moment(formatted_date).format(\"MMMM Do LT\")),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastSeen = _useState6[0],\n    setlastSeen = _useState6[1];\n  var _useState7 = useState(data.status),\n    _useState8 = _slicedToArray(_useState7, 2),\n    status = _useState8[0],\n    setStatus = _useState8[1];\n  var singleChat = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      var chatId = data;\n      var user1 = yield AsyncStorage.getItem(\"user\");\n      var user = JSON.parse(user1);\n      var config = {\n        headers: {\n          Authorization: \"Bearer \" + user.token\n        }\n      };\n      try {\n        var _yield$axios$get = yield axios.get(\"http://192.168.100.2:5000/api/chat/single/\" + chatId, config),\n          _data = _yield$axios$get.data;\n        setselectedUserData(_data);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function singleChat(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var displaySelectedUserDetails = function displaySelectedUserDetails() {\n    if (selectedUserData != null) {\n      if (user != null) {\n        for (var i = 0; i < selectedUserData.users.length; i++) {\n          if (selectedUserData.users[i]._id != user._id) {\n            var _formatted_date = moment(selectedUserData.users[i].lastSeen).format(\"MMMM Do LT\");\n            return _jsxs(Text, {\n              children: [selectedUserData.users[i].status, \" was last seen at \", _formatted_date]\n            });\n          }\n        }\n      }\n    }\n  };\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: userName\n    })\n  });\n}\nexport default UserRecently;","map":{"version":3,"names":["AsyncStorage","axios","moment","React","useEffect","useState","useDispatch","useSelector","singleChat","UserRecently","data","userData","console","log","userName","selectedUserData","setselectedUserData","state","auth","user","formatted_date","lastSeen","setUsername","format","setlastSeen","status","setStatus","chatId","user1","getItem","JSON","parse","config","headers","Authorization","token","get","err","displaySelectedUserDetails","i","users","length","_id"],"sources":["/home/dagmawi/personal/borsa/myborsa/borsa-ui/src/screens/UserRecently.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage'\nimport axios from 'axios'\nimport moment from 'moment'\nimport React, { useEffect, useState } from 'react'\nimport { AppState, Pressable, Text, View } from 'react-native'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { singleChat } from '../features/chat/chatSlice'\n\nfunction UserRecently({data, userData}) {\n  console.log(userData.userName)\n  const [selectedUserData, setselectedUserData] = useState([])\n  const { user } = useSelector((state) => state.auth)\n  const formatted_date = data.lastSeen\n  const [userName, setUsername] = useState(userData.userName)\n  const [lastSeen, setlastSeen] = useState(moment(formatted_date).format(\"MMMM Do LT\"))\n  const [status, setStatus] = useState(data.status)\n\n\n    const singleChat = async (data) => {\n      const chatId = data\n        // console.log(data)\n        // console.log('in single chat service')\n        const user1 = await  AsyncStorage.getItem(\"user\")\n        const user = JSON.parse(user1)\n        // // console.log(user)\n      \n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          }\n          try{\n            const {data} = await axios.get(`http://192.168.100.2:5000/api/chat/single/${chatId}`, config)\n          //  console.log(data)\n          setselectedUserData(data)\n          // for(var i = 0; i < selectedUserData.users.length ; i++){\n          //   if(user != null)\n          //   if(selectedUserData.users[i]._id != user._id){\n          //     console.log(`found selected users with id = ${selectedUserData.users[i]._id} and status =  ${selectedUserData.users[i].status}` )\n          //   }\n          // }\n          // console.log(selectedUserData.users[0]._id)\n            // return data\n          }\n          catch(err){\n            console.log(err)\n          }\n        //   // console.log('fetchin in chatService')\n        //   // const response = await axios.get(API_URL, config)\n         \n        //   // return data\n        \n       \n        }\n        const displaySelectedUserDetails =() => {\n          if(selectedUserData != null){\n         if(user != null){\n          for(var i = 0; i < selectedUserData.users.length ; i++){\n          \n            if(selectedUserData.users[i]._id != user._id){\n              const formatted_date =moment( selectedUserData.users[i].lastSeen).format(\"MMMM Do LT\")\n            \n             return <Text>{selectedUserData.users[i].status} was last seen at {formatted_date}</Text>\n            }\n          }\n         }\n          }\n          // return <Text>jbtujbugbreu</Text>\n        }\n        \n   \n   \n    \n    // console.log(data)\n  return (\n    <View>\n        {/* <Pressable onPress={() => singleChat(data)}>\n    <Text>prss herr to get updated chat info</Text>\n        </Pressable> */}\n        {/* {singleChat()} */}\n           {/* {displaySelectedUserDetails()} */}\n        <Text>{userName}</Text>\n        {/* <Text>{lastSeen}</Text> */}\n       {/* { status === \"online\" ?  <Text>Online</Text> : null}\n       { status === \"away\" ?  <Text>last seen at {lastSeen} </Text>  : null} */}\n        {/* <Text>last seen at {lastSeen} </Text> */}\n        \n    </View>\n  )\n}\n\nexport default UserRecently"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,2CAA2C;AACpE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAElD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU;AAAoC;AAAA;AAEvD,SAASC,YAAY,OAAmB;EAAA,IAAjBC,IAAI,QAAJA,IAAI;IAAEC,QAAQ,QAARA,QAAQ;EACnCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,QAAQ,CAAC;EAC9B,gBAAgDT,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArDU,gBAAgB;IAAEC,mBAAmB;EAC5C,mBAAiBT,WAAW,CAAC,UAACU,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAA3CC,IAAI,gBAAJA,IAAI;EACZ,IAAMC,cAAc,GAAGV,IAAI,CAACW,QAAQ;EACpC,iBAAgChB,QAAQ,CAACM,QAAQ,CAACG,QAAQ,CAAC;IAAA;IAApDA,QAAQ;IAAEQ,WAAW;EAC5B,iBAAgCjB,QAAQ,CAACH,MAAM,CAACkB,cAAc,CAAC,CAACG,MAAM,CAAC,YAAY,CAAC,CAAC;IAAA;IAA9EF,QAAQ;IAAEG,WAAW;EAC5B,iBAA4BnB,QAAQ,CAACK,IAAI,CAACe,MAAM,CAAC;IAAA;IAA1CA,MAAM;IAAEC,SAAS;EAGtB,IAAMlB,UAAU;IAAA,8BAAG,WAAOE,IAAI,EAAK;MACjC,IAAMiB,MAAM,GAAGjB,IAAI;MAGjB,IAAMkB,KAAK,SAAU5B,YAAY,CAAC6B,OAAO,CAAC,MAAM,CAAC;MACjD,IAAMV,IAAI,GAAGW,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;MAG5B,IAAMI,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,cAAYf,IAAI,CAACgB;QAChC;MACF,CAAC;MACD,IAAG;QACD,6BAAqBlC,KAAK,CAACmC,GAAG,gDAA8CT,MAAM,EAAIK,MAAM,CAAC;UAAtFtB,KAAI,oBAAJA,IAAI;QAEbM,mBAAmB,CAACN,KAAI,CAAC;MASzB,CAAC,CACD,OAAM2B,GAAG,EAAC;QACRzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;MAClB;IAOF,CAAC;IAAA,gBAnCC7B,UAAU;MAAA;IAAA;EAAA,GAmCX;EACD,IAAM8B,0BAA0B,GAAE,SAA5BA,0BAA0B,GAAQ;IACtC,IAAGvB,gBAAgB,IAAI,IAAI,EAAC;MAC7B,IAAGI,IAAI,IAAI,IAAI,EAAC;QACf,KAAI,IAAIoB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,gBAAgB,CAACyB,KAAK,CAACC,MAAM,EAAGF,CAAC,EAAE,EAAC;UAErD,IAAGxB,gBAAgB,CAACyB,KAAK,CAACD,CAAC,CAAC,CAACG,GAAG,IAAIvB,IAAI,CAACuB,GAAG,EAAC;YAC3C,IAAMtB,eAAc,GAAElB,MAAM,CAAEa,gBAAgB,CAACyB,KAAK,CAACD,CAAC,CAAC,CAAClB,QAAQ,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC;YAEvF,OAAO,MAAC,IAAI;cAAA,WAAER,gBAAgB,CAACyB,KAAK,CAACD,CAAC,CAAC,CAACd,MAAM,EAAC,oBAAkB,EAACL,eAAc;YAAA,EAAQ;UACzF;QACF;MACD;IACC;EAEF,CAAC;EAMP,OACE,KAAC,IAAI;IAAA,UAMD,KAAC,IAAI;MAAA,UAAEN;IAAQ;EAAQ,EAMpB;AAEX;AAEA,eAAeL,YAAY"},"metadata":{},"sourceType":"module"}