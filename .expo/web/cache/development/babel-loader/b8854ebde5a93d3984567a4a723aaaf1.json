{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { createRef, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport ScrollableFeed from \"../components/Chats/ScrollableFeed.js/ScrollableFeed\";\nimport io from 'socket.io-client';\nimport { ChatState } from \"../context/ChatProvider\";\nimport { fetchChat } from \"../features/chat/chatSlice\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useRoute } from '@react-navigation/native';\nimport { Camera } from \"expo-camera\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as MediaLibrary from \"expo-media-library\";\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { API_BASE_URL } from \"../utils/config\";\nimport { MMKV } from 'react-native-mmkv';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var storage = new MMKV();\nvar MessagingScreen = function MessagingScreen() {\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    newmessage = _useState2[0],\n    setNewMessage = _useState2[1];\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var chatId = route.params.chatId;\n  var userSelected = route.params.userSelected;\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    messages = _useState4[0],\n    setMessages = _useState4[1];\n  var ENDPOINT = \"http://192.168.100.2:5000\";\n  var socket = useRef(null);\n  var selectedChatCompare = null;\n  var chatRouteCompare = null;\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    socketConnected = _useState6[0],\n    setsocketConnected = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    typing = _useState8[0],\n    setTyping = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    isTyping = _useState10[0],\n    setIsTyping = _useState10[1];\n  var myRef = createRef();\n  var _ChatState = ChatState(),\n    selectedChat = _ChatState.selectedChat,\n    setSelectedChat = _ChatState.setSelectedChat,\n    fetchAgain = _ChatState.fetchAgain,\n    setfetchAgain = _ChatState.setfetchAgain,\n    chats = _ChatState.chats,\n    setChats = _ChatState.setChats,\n    notification = _ChatState.notification,\n    setNotification = _ChatState.setNotification,\n    sentMessage = _ChatState.sentMessage,\n    setsentMessage = _ChatState.setsentMessage,\n    receivedMessage = _ChatState.receivedMessage,\n    setreceivedMessage = _ChatState.setreceivedMessage,\n    messageSentOrReceived = _ChatState.messageSentOrReceived,\n    setmessageSentOrReceived = _ChatState.setmessageSentOrReceived,\n    chatRoute = _ChatState.chatRoute,\n    setchatRoute = _ChatState.setchatRoute;\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    hasPermissions = _useState12[0],\n    sethasPermissions = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    hasMediaLibPermissions = _useState14[0],\n    setMediaLibPermissions = _useState14[1];\n  var _useState15 = useState(null),\n    _useState16 = _slicedToArray(_useState15, 2),\n    image = _useState16[0],\n    setImage = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    getPics = _useState18[0],\n    setgetPics = _useState18[1];\n  var _useState19 = useState(true),\n    _useState20 = _slicedToArray(_useState19, 2),\n    cameraOnOff = _useState20[0],\n    setcameraOnOff = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    cameratest = _useState22[0],\n    setcameratest = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    refresh = _useState24[0],\n    setRefresh = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    expoPushToken = _useState26[0],\n    setExpoPushToken = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    pushnotification = _useState28[0],\n    setpushNotification = _useState28[1];\n  var notificationListener = useRef();\n  var responseListener = useRef();\n  var _ChatState2 = ChatState(),\n    messageHeader = _ChatState2.messageHeader,\n    setmessageHeader = _ChatState2.setmessageHeader;\n  var publicFolder = \"http://192.168.100.2:5000/images/\";\n  Notifications.setNotificationHandler({\n    handleNotification: function () {\n      var _handleNotification = _asyncToGenerator(function* () {\n        return {\n          shouldShowAlert: true,\n          shouldPlaySound: false,\n          shouldSetBadge: false\n        };\n      });\n      function handleNotification() {\n        return _handleNotification.apply(this, arguments);\n      }\n      return handleNotification;\n    }()\n  });\n  console.log(image);\n  var cameraRef = useRef();\n  useLayoutEffect(function () {\n    socket.current = io(ENDPOINT);\n    socket.current.emit(\"setup\", user);\n    socket.current.on(\"connected\", function () {\n      return setsocketConnected(true);\n    });\n    socket.current.on(\"typing\", function () {\n      return setIsTyping(true);\n    });\n    socket.current.on(\"stop typing\", function () {\n      return setIsTyping(false);\n    });\n  }, []);\n  useEffect(function () {\n    fetchMessage();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n  useEffect(function () {\n    chatRouteCompare = chatRoute;\n    console.log(chatRouteCompare);\n  }, []);\n  useEffect(function () {});\n  useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return setExpoPushToken(token);\n    });\n    notificationListener.current = Notifications.addNotificationReceivedListener(function (notification) {\n      setNotification(notification);\n    });\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return function () {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n  useEffect(function () {\n    testCamera();\n  }, []);\n  useEffect(function () {\n    null;\n  }, [refresh]);\n  useEffect(function () {\n    UpdateUserRoute();\n  }, []);\n  useEffect(function () {\n    console.log(route.params.userSelected._id);\n    console.log(\"messagessssssssssssssssss are:\", messages);\n  }, []);\n  function sendPushNotification(_x) {\n    return _sendPushNotification.apply(this, arguments);\n  }\n  function _sendPushNotification() {\n    _sendPushNotification = _asyncToGenerator(function* (expoPushToken) {\n      var message = {\n        to: expoPushToken,\n        sound: 'default',\n        title: 'Original Title',\n        body: 'And here is the body!',\n        data: {\n          someData: 'goes here'\n        }\n      };\n      yield fetch('https://exp.host/--/api/v2/push/send', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Accept-encoding': 'gzip, deflate',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(message)\n      });\n    });\n    return _sendPushNotification.apply(this, arguments);\n  }\n  var testNotif = function () {\n    var _ref = _asyncToGenerator(function* (Newmessage) {\n      console.log(Newmessage.sender._id);\n      var chat = Newmessage.chat;\n      chat.users.forEach(function (tuser) {\n        if (tuser._id == Newmessage.sender._id && Newmessage.receiver) console.log('notif received');\n      });\n    });\n    return function testNotif(_x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  function registerForPushNotificationsAsync() {\n    return _registerForPushNotificationsAsync.apply(this, arguments);\n  }\n  function _registerForPushNotificationsAsync() {\n    _registerForPushNotificationsAsync = _asyncToGenerator(function* () {\n      var token;\n      if (Device.isDevice) {\n        var _yield$Notifications$ = yield Notifications.getPermissionsAsync(),\n          existingStatus = _yield$Notifications$.status;\n        var finalStatus = existingStatus;\n        if (existingStatus !== 'granted') {\n          var _yield$Notifications$2 = yield Notifications.requestPermissionsAsync(),\n            status = _yield$Notifications$2.status;\n          finalStatus = status;\n        }\n        if (finalStatus !== 'granted') {\n          alert('Failed to get push token for push notification!');\n          return;\n        }\n        token = (yield Notifications.getExpoPushTokenAsync()).data;\n        console.log(token);\n      } else {\n        alert('Must use physical device for Push Notifications');\n      }\n      if (Platform.OS === 'android') {\n        Notifications.setNotificationChannelAsync('default', {\n          name: 'default',\n          importance: Notifications.AndroidImportance.MAX,\n          vibrationPattern: [0, 250, 250, 250],\n          lightColor: '#FF231F7C'\n        });\n      }\n      return token;\n    });\n    return _registerForPushNotificationsAsync.apply(this, arguments);\n  }\n  var UpdateUserRoute = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        console.log(route.name);\n        var userId = user._id;\n        console.log(userId);\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$put = yield axios.put(API_BASE_URL + \"users/route\", {\n            userId: user._id,\n            route: route.name\n          }, config),\n          data = _yield$axios$put.data;\n        console.log('user route updated');\n      } catch (err) {\n        console.log(err);\n      }\n    });\n    return function UpdateUserRoute() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var testCamera = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      var mediaPermissions = yield MediaLibrary.requestPermissionsAsync();\n      var cameraStatus = yield Camera.requestCameraPermissionsAsync();\n      sethasPermissions(cameraStatus.status === 'granted');\n      setMediaLibPermissions(mediaPermissions.status === 'granted');\n    });\n    return function testCamera() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var takePic = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      var options = {\n        quality: 1,\n        base64: true,\n        exif: false\n      };\n      var newPhoto = yield cameraRef.current.takePictureAsync(options);\n      console.log(newPhoto.uri);\n      setImage(newPhoto);\n    });\n    return function takePic() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var storeNotifcation = function () {\n    var _ref5 = _asyncToGenerator(function* (notification, chat) {\n      try {\n        yield AsyncStorage.removeItem(\"notification\");\n        yield AsyncStorage.removeItem(\"chat\");\n        yield AsyncStorage.setItem(\"notification\", JSON.stringify(notification));\n        yield AsyncStorage.setItem(\"notifChat\", JSON.stringify(chat));\n        console.log('notif stored');\n      } catch (err) {\n        console.log(\"cannot store notificaiton/chat\");\n      }\n    });\n    return function storeNotifcation(_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var CameraFeature = function CameraFeature() {\n    console.log(\"hi \");\n    setcameratest(true);\n  };\n  var sendMessage = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$post = yield axios.post(API_BASE_URL + \"message\", {\n            content: newmessage,\n            chatId: chatId,\n            image: \"\",\n            receiver: route.params.userSelected._id\n          }, config),\n          data = _yield$axios$post.data;\n        testNotif(data);\n        setImage(null);\n        setNewMessage(\"\");\n        socket.current.emit(\"new message\", data);\n        setMessages([].concat(_toConsumableArray(messages), [data]));\n        setmessageSentOrReceived(false);\n        setfetchAgain(true);\n        setfetchAgain(false);\n        myRef.scrollTo(0, myRef.scrollHeight);\n        return data;\n      } catch (error) {}\n    });\n    return function sendMessage() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var fetchMessage = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$get = yield axios.get(API_BASE_URL + \"message/\" + chatId, config),\n          data = _yield$axios$get.data;\n        setMessages(data);\n        console.log(\"messssssssssssssssssssssss:\", data);\n        setMessages(function (state) {\n          return state;\n        });\n        socket.current.emit(\"join chat\", chatId);\n        return data;\n      } catch (error) {}\n    });\n    return function fetchMessage() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var saveImg = function () {\n    var _ref8 = _asyncToGenerator(function* () {\n      var options = {\n        quality: 1,\n        base64: false,\n        storageOptions: {\n          skipBackup: true,\n          path: 'images'\n        }\n      };\n      var formData = new FormData();\n      var testData = {\n        content: \"\",\n        chatId: chatId\n      };\n      var newPhoto = yield cameraRef.current.takePictureAsync(options);\n      setImage(newPhoto);\n      var filename = newPhoto.uri.split('/').pop();\n      formData.append('image', {\n        name: filename,\n        uri: newPhoto.uri,\n        type: 'image/jpg'\n      });\n      formData.append('content', testData.content);\n      formData.append('chatId', testData.chatId);\n      try {\n        var config = {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'multipart/form-data',\n            'Authorization': \"Bearer \" + user.token\n          }\n        };\n        var _yield$axios$post2 = yield axios.post(\"http://192.168.100.2:5000/api/message/\", formData, config),\n          data = _yield$axios$post2.data;\n        socket.current.emit(\"new message\", data);\n        setMessages([].concat(_toConsumableArray(messages), [data]));\n        setmessageSentOrReceived(false);\n        setfetchAgain(true);\n        setfetchAgain(false);\n        console.log('message + image saved successfully');\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function saveImg() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n  var getImgs = function () {\n    var _ref9 = _asyncToGenerator(function* () {\n      try {\n        var _yield$axios$get2 = yield axios.get(\"http://192.168.100.2:5000/api/images/retrieveImg\"),\n          data = _yield$axios$get2.data;\n        setgetPics(data);\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n    return function getImgs() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n  var typingHandler = function typingHandler(e) {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (!typing) {\n      setTyping(true);\n      socket.current.emit('typing', chatId);\n    }\n    var lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(function () {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.current.emit(\"stop typing\", chatId);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n  if (hasPermissions === undefined) {\n    return _jsx(Text, {\n      children: \"Requesting permissions...\"\n    });\n  } else if (!hasPermissions) {\n    return _jsx(Text, {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\"\n      },\n      children: \"Permission for camera not granted. Please change this in settings.\"\n    });\n  }\n  if (cameratest) {\n    return _jsx(View, {\n      style: styles.container2,\n      children: _jsxs(Camera, {\n        style: styles.camera,\n        ref: cameraRef,\n        children: [_jsx(Pressable, {\n          onPress: function onPress() {\n            setcameratest(false);\n            setmessageHeader(false);\n            setRefresh(false);\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"close-outline\",\n            size: 50,\n            color: \"white\",\n            style: styles.close\n          })\n        }), _jsx(Pressable, {\n          style: styles.text2,\n          onPress: function onPress() {\n            setRefresh(true);\n            saveImg();\n          },\n          children: _jsx(MaterialCommunityIcons, {\n            name: \"camera-iris\",\n            size: 60,\n            color: \"white\",\n            style: styles.minicamera\n          })\n        })]\n      })\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      ref: myRef,\n      style: {\n        marginBottom: 20,\n        paddingBottom: 25\n      },\n      children: _jsx(ScrollableFeed, {\n        messages: messages\n      })\n    }), _jsxs(SafeAreaView, {\n      style: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: \"row\",\n        backgroundColor: \"#f9f8fc\",\n        padding: 5,\n        paddingHorizontal: 10\n      },\n      behavior: \"position\",\n      children: [isTyping ? _jsx(View, {\n        children: _jsx(Text, {\n          children: \" isloading... \"\n        })\n      }) : null, _jsx(TextInput, {\n        value: newmessage,\n        onChangeText: setNewMessage,\n        onChange: typingHandler,\n        style: styles.input,\n        placeholder: \"Type your message...\",\n        onKeyPress: function onKeyPress(keyPress) {\n          if (keyPress.key == \"Enter\") {\n            sendMessage();\n          }\n        }\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          CameraFeature();\n          setmessageHeader(true);\n        },\n        children: _jsx(AntDesign, {\n          name: \"camera\",\n          size: 24,\n          color: \"black\"\n        })\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          if (user._id) {\n            var newMessages = messages.concat([{\n              content: newmessage,\n              created_at: new Date(),\n              sender_id: user._id\n            }]);\n            storage.set('message', JSON.stringify(newMessages));\n            var mm = JSON.parse(storage.getString('message'));\n            console.log(\"message updated:\", mm);\n            setMessages(mm);\n          }\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"send\",\n          size: 24,\n          color: \"#17141f\"\n        })\n      })]\n    })]\n  });\n};\nexport default MessagingScreen;\nvar styles = StyleSheet.create({\n  sendingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text2: {\n    color: \"green\",\n    marginTop: \"150%\",\n    marginLeft: 165,\n    justifyContent: \"center\",\n    width: \"40%\"\n  },\n  minicamera: {\n    height: 100\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  close: {\n    marginLeft: 350,\n    marginTop: 40\n  },\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: \"#f9f8fc\",\n    padding: 5,\n    paddingHorizontal: 10\n  },\n  input: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 5,\n    paddingHorizontal: 10,\n    marginHorizontal: 10,\n    borderRadius: 50,\n    borderColor: \"lightgray\",\n    borderWidth: StyleSheet.hairlineWidth\n  },\n  camera: {\n    marginTop: 0,\n    fontSize: 20\n  },\n  text: {\n    marginTop: 20\n  },\n  container2: {},\n  container3: {},\n  camera: {\n    height: \"100%\"\n  },\n  preview: {\n    alignSelf: 'stretch',\n    flex: 1\n  }\n});","map":{"version":3,"names":["useDispatch","useSelector","AntDesign","MaterialIcons","SafeAreaView","createRef","useEffect","useLayoutEffect","useRef","useState","axios","ScrollableFeed","io","ChatState","fetchChat","AsyncStorage","useRoute","Camera","MaterialCommunityIcons","MediaLibrary","Device","Notifications","API_BASE_URL","MMKV","storage","MessagingScreen","state","auth","user","newmessage","setNewMessage","route","dispatch","chatId","params","userSelected","messages","setMessages","ENDPOINT","socket","selectedChatCompare","chatRouteCompare","socketConnected","setsocketConnected","typing","setTyping","isTyping","setIsTyping","myRef","selectedChat","setSelectedChat","fetchAgain","setfetchAgain","chats","setChats","notification","setNotification","sentMessage","setsentMessage","receivedMessage","setreceivedMessage","messageSentOrReceived","setmessageSentOrReceived","chatRoute","setchatRoute","hasPermissions","sethasPermissions","hasMediaLibPermissions","setMediaLibPermissions","image","setImage","getPics","setgetPics","cameraOnOff","setcameraOnOff","cameratest","setcameratest","refresh","setRefresh","expoPushToken","setExpoPushToken","pushnotification","setpushNotification","notificationListener","responseListener","messageHeader","setmessageHeader","publicFolder","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","console","log","cameraRef","current","emit","on","fetchMessage","registerForPushNotificationsAsync","then","token","addNotificationReceivedListener","addNotificationResponseReceivedListener","response","removeNotificationSubscription","testCamera","UpdateUserRoute","_id","sendPushNotification","message","to","sound","title","body","data","someData","fetch","method","headers","Accept","JSON","stringify","testNotif","Newmessage","sender","chat","users","forEach","tuser","receiver","isDevice","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","userId","config","Authorization","put","err","mediaPermissions","cameraStatus","requestCameraPermissionsAsync","takePic","options","quality","base64","exif","newPhoto","takePictureAsync","uri","storeNotifcation","removeItem","setItem","CameraFeature","sendMessage","post","content","scrollTo","scrollHeight","error","get","saveImg","storageOptions","skipBackup","path","formData","FormData","testData","filename","split","pop","append","type","getImgs","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","undefined","position","top","left","transform","styles","container2","camera","close","text2","minicamera","marginBottom","paddingBottom","right","bottom","flexDirection","backgroundColor","padding","paddingHorizontal","input","keyPress","key","newMessages","concat","created_at","sender_id","set","mm","parse","getString","StyleSheet","create","sendingContainer","justifyContent","alignItems","color","marginTop","marginLeft","width","height","loadingContainer","flex","container","marginHorizontal","borderRadius","borderColor","borderWidth","hairlineWidth","fontSize","text","container3","preview","alignSelf"],"sources":["/home/dagmawi/personal/borsa/ui/borsa-ui/src/screens/MessagingScreen.js"],"sourcesContent":["import { ActivityIndicator, View, StyleSheet, TextInput, KeyboardAvoidingView, Button, Pressable, Text, Image} from 'react-native';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {AntDesign, MaterialIcons} from '@expo/vector-icons'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { createRef, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport axios from 'axios';\nimport ScrollableFeed from '../components/Chats/ScrollableFeed.js/ScrollableFeed';\nimport io from 'socket.io-client'\nimport { ChatState } from '../context/ChatProvider';\nimport { fetchChat } from '../features/chat/chatSlice';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useRoute } from '@react-navigation/native'\nimport {Camera} from \"expo-camera\"\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as MediaLibrary from \"expo-media-library\"\nimport * as Device from 'expo-device';\nimport * as Notifications from 'expo-notifications';\nimport { API_BASE_URL } from '../utils/config';\nimport { MMKV } from 'react-native-mmkv'\n\n\n\nexport const storage = new MMKV()\n\nconst MessagingScreen = () => {\n \n  const { user } = useSelector((state) => state.auth)\n  const [newmessage, setNewMessage] = useState();\n  const route = useRoute()\n  const dispatch = useDispatch()\n  const {chatId} = route.params;\n  const {userSelected} = route.params;\n  const [messages, setMessages] = useState([])\n  const ENDPOINT = \"http://192.168.100.2:5000\"\n  var socket = useRef(null)\n  var selectedChatCompare = null;\n  var chatRouteCompare = null\n  const [socketConnected, setsocketConnected] = useState(false)\n  const [typing, setTyping] = useState(false)\n  const [isTyping, setIsTyping] = useState(false)\n\n\n  const myRef = createRef()\n\n  const { \n    selectedChat, \n    setSelectedChat,\n    fetchAgain,\n     setfetchAgain,  \n     chats, \n     setChats, \n     notification, \n     setNotification, \n     sentMessage, \n     setsentMessage, \n     receivedMessage, \n    setreceivedMessage,\n    messageSentOrReceived, setmessageSentOrReceived,\n    chatRoute, setchatRoute\n    } = ChatState(); \n  // const [mesages, setMesages] = useState()\n  // const defaultOptions = {\n  //   loop: true,\n  //   autoplay: true,\n  //   animationData: animationData,\n  //   rendererSettings: {\n  //     preserveAspectRatio: \"xMidYMid slice\",\n  //   },\n  // };\n  \n  const [hasPermissions, sethasPermissions] = useState(null)\n  const [hasMediaLibPermissions, setMediaLibPermissions] = useState()\n  const [image, setImage] = useState(null)\n  const [getPics, setgetPics] = useState([])\n  const [cameraOnOff, setcameraOnOff] = useState(true)\n  const [cameratest, setcameratest] = useState(false)\n  const [refresh, setRefresh] = useState(false)\n  const [expoPushToken, setExpoPushToken] = useState('');\n  const [pushnotification, setpushNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  const {messageHeader, setmessageHeader} = ChatState()\n  const publicFolder = \"http://192.168.100.2:5000/images/\"\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: false,\n      shouldSetBadge: false,\n    }),\n  });\n  // console.log(messageHeader)\n  console.log(image)\n  const cameraRef = useRef()\n  useLayoutEffect(() => {\n  \n    // fetchMessage()\n    socket.current = io(ENDPOINT)\n    socket.current.emit(\"setup\", user);\n    // socket.emit(\"findChat\", chatId)\n    socket.current.on(\"connected\", () => setsocketConnected(true) )\n   \n    socket.current.on(\"typing\", () => setIsTyping(true))\n    socket.current.on(\"stop typing\", () => setIsTyping(false))\n   \n    \n  }, [])\n  useEffect(() =>{\n    fetchMessage()\n    selectedChatCompare = selectedChat\n    // console.log(notification)\n   \n  \n    // console.log(fetchAgain)\n  \n  }, [selectedChat])\n  useEffect(() =>{\n    chatRouteCompare = chatRoute\n    console.log(chatRouteCompare)\n  \n  }, [])\n\n  // console.log(notification)\n  // useEffect(() => {\n  //   // console.log(chatId)\n  //   // console.log(socket.current)\n  //   // console.log(selectedChat._id)\n  //   // setNotification([100]);\n  //   //     setNotification((state) => {\n  //   //           console.log(state)\n  //   //           return state\n  //   //         })\n  //   socket.current.on(\"message recieved\", (newMessageReceived) => {\n  //    console.log(newMessageReceived.chat)\n  //     if(!selectedChatCompare || selectedChatCompare._id !== newMessageReceived.chat._id){\n  //       console.log(newMessageReceived.chat)\n        \n  //       if (!notification.includes(newMessageReceived)) {\n  //         setNotification([ newMessageReceived]);\n  //         console.log(notification)\n  //         setNotification((state) => {\n  //           console.log(state)\n  //           return state\n  //         })\n  //         setfetchAgain(!fetchAgain)\n  //         setfetchAgain((state) => {\n  //           console.log(state)\n  //           return state\n  //         })\n          \n          \n  //       }\n          \n  //       }\n      \n  //     // else{\n  //     //   setMessages([...messages, newMessageReceived])\n  //     // }\n      \n  //   })\n   \n  // })\n  useEffect(() => {\n    // socket.current.on(\"message recieved\", (newMessageReceived) => {\n    //   // console.log('message received')\n    //   // if(newMessageReceived.receiver.route != \"Messaging\")\n    //   // testNotif(newMessageReceived)\n    // //  console.log(newMessageReceived.chat._id)\n    // //  console.log(newMessageReceived.chat)\n    // //  if((!selectedChatCompare)  ||  selectedChatCompare._id !== newMessageReceived.chat._id || (chatRouteCompare)  ){\n    // //  if((newMessageReceived.receiver.route == \"Chats\")){\n    // //   console.log('notif received')\n    // // if (!notification.includes({newMessageReceived})) {\n    // //     // console.log(newMessageReceived.chat)\n    // //             setNotification([...notification,  newMessageReceived]);\n    // //             // console.log(notification)\n    // //             setNotification((state) => {\n    // //               // console.log(state)\n    // //               return state\n    // //             })\n    // //             // console.log(notification)\n    // //             storeNotifcation(notification, {chatUsers: newMessageReceived.chat.users, chatId: newMessageReceived.chat._id })\n    // //             // storeNotifcation(notification)\n               \n                \n    // //             setfetchAgain(!fetchAgain)\n    // //             setfetchAgain((state) => {\n    // //               // console.log(state)\n    // //               return state\n    // //             })\n    // //             // console.log(fetchAgain)\n    // //  }\n\n    // // }\n    // // else{\n    // //   console.log('notif not received')\n    // //   setMessages([...messages, newMessageReceived])\n    // //   // setreceivedMessage(true)\n    // // }   \n\n         \n    //  })\n\n  })\n  useEffect(() => {\n    registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n      setNotification(notification);\n    });\n\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log(response);\n    });\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, []);\n  // search how to run an async func in react \n useEffect(() => {\n  testCamera();\n }, [])\n useEffect(() => {\n null\n  // setImage(null)\n }, [refresh])\n useEffect(() => {\n UpdateUserRoute()\n//  console.log(route.name)\n  // setImage(null)\n }, [])\n useEffect(() => {\n//  UpdateUserRoute()\n console.log(route.params.userSelected._id)\n console.log(\"messagessssssssssssssssss are:\", messages)\n  // setImage(null)\n }, [])\n async function sendPushNotification(expoPushToken) {\n  const message = {\n    to: expoPushToken,\n    sound: 'default',\n    title: 'Original Title',\n    body: 'And here is the body!',\n    data: { someData: 'goes here' },\n  };\n\n  await fetch('https://exp.host/--/api/v2/push/send', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Accept-encoding': 'gzip, deflate',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  });\n}\nconst testNotif = async (Newmessage) => {\n  \n  console.log(Newmessage.sender._id)\n  // socket.current.on(\"message recieved\", (newMessageReceived) => {\n  //   console.log('notification received')\n   \n       \n  //  })\n  var chat = Newmessage.chat;\n  // //   console.log( message.receiver._id)\n  //   if (!chat.users) return console.log(\"chat.users not defined\");\n    \n\n    chat.users.forEach( (tuser) => {\n      if (tuser._id == Newmessage.sender._id && Newmessage.receiver ) console.log('notif received')\n        // console.log('push notif recieved')\n        // await sendPushNotification(expoPushToken);\n      ;\n      \n      \n    });\n  // console.log(message.receiver.route)\n  // await sendPushNotification(expoPushToken);\n   \n    \n  }\n\n\nasync function registerForPushNotificationsAsync() {\n  let token;\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n    alert('Must use physical device for Push Notifications');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n\n  return token;\n}\n const UpdateUserRoute = async () => {\n    \n    try{\n      console.log(route.name)\n      const userId = user._id\n      console.log(userId)\n      const   config = {\n          \n        headers: {\n         \n          Authorization: `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n  \n      const {data} = await axios.put(`${API_BASE_URL}users/route`,{\n        userId: user._id,\n        route: route.name\n        \n      }, config)\n      console.log('user route updated')\n      // console.log(data.lastSeen)\n      // setlastseendateandtime(moment(data.lastSeen).format(\"dddd, MMMM Do YYYY\") + \" \" + moment(data.lastSeen).format(\"LT\"))\n\n    }\n    catch(err){\n      console.log(err)\n    }\n    \n   }\n\n \n const testCamera = async () =>{\n  const mediaPermissions = await MediaLibrary.requestPermissionsAsync()\n  const cameraStatus = await Camera.requestCameraPermissionsAsync()\n  sethasPermissions(cameraStatus.status === 'granted')\n  setMediaLibPermissions(mediaPermissions.status === 'granted')\n }\n let takePic = async () => {\nlet options = {\nquality: 1,\nbase64: true,\nexif: false\n};\n\nlet newPhoto = await cameraRef.current.takePictureAsync(options);\nconsole.log(newPhoto.uri)\nsetImage(newPhoto);\n};\n  const storeNotifcation = async(notification, chat) => {\n    try{\n          await AsyncStorage.removeItem(\"notification\")\n          await AsyncStorage.removeItem(\"chat\")\n      // console.log(notification)\n          await  AsyncStorage.setItem(\"notification\", JSON.stringify(notification))\n        //  await AsyncStorage.getItem('notification')\n          await  AsyncStorage.setItem(\"notifChat\", JSON.stringify(chat))\n          console.log('notif stored')\n          // const getChatnotif = await AsyncStorage.getItem('notifChat')\n        // // const chatnotif = await  AsyncStorage.setItem(\"notifChat\", JSON.stringify(chat))\n\n        // console.log(JSON.parse(getChatnotif))\n        // // console.log(AsyncStorage.getItem(JSON.parse(chatnotif)))\n    }\n    catch(err){\n      console.log(\"cannot store notificaiton/chat\")\n    }\n      \n   \n  }\n  \n//     useLayoutEffect(() =>{\n//       socket.on(\"message recieved\", (newMessageReceived) => {\n//         setMessages([...messages, newMessageReceived])\n//       })\n//     // fetchMessage()\n    \n//  }, [socket])\nconst CameraFeature = () => {\n  console.log(\"hi \")\n  setcameratest(true)\n  // return <Camera\n  // >\n\n  // </Camera>\n  // return <View style={styles.camera}>\n  //         <Text>Goat</Text>\n  //     </View>\n}\n  const sendMessage = async() => {\n    try{\n    //   const config = {\n    //     headers: {\n    //         Authorization: `Bearer ${user.token}`\n\n    //     }\n    // }\n    // let options = {\n    //   quality: 1,\n    //   base64: false,\n    //   // exif: true,\n    //   storageOptions: {\n    //     skipBackup: true,\n    //     path: 'images'\n    //    }\n    // };\n    // const formData = new FormData()\n    // let newPhoto = await cameraRef.current.takePictureAsync(options);\n    // setImage(newPhoto)\n    //setNewMessage(\"\")\n    \n      const config = {\n          \n        headers: {\n         \n          Authorization: `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n     \n   \n \n    const {data} = await axios.post(`${API_BASE_URL}message`, {\n      content : newmessage,\n      chatId: chatId,\n      image: \"\",\n      receiver: route.params.userSelected._id\n    },\n    config)\n    testNotif(data)\n    setImage(null)\n    // console.log(\"message sent successfully\")\n    setNewMessage(\"\")\n   \n    \n  socket.current.emit(\"new message\", data)\n  setMessages([...messages, data])\n  setmessageSentOrReceived(false)\n  setfetchAgain(true)\n  setfetchAgain(false)\n\n  myRef.scrollTo(0, myRef.scrollHeight)\n  \n  return data\n    \n    \n   \n  \n   \n    }\n    catch(error){\n      // console.log('sending message is not possible')\n    }\n  }\n  \n  const fetchMessage = async() => {\n    try{\n      const config = {\n        headers: {\n            Authorization: `Bearer ${user.token}`\n\n        }\n    }\n\n   \n    const {data} = await axios.get(`${API_BASE_URL}message/${chatId}`,\n    config)\n    \n    // console.log(data)\n    // console.log(mesages) \n    setMessages(data)\n\n    console.log(\"messssssssssssssssssssssss:\", data)\n    setMessages((state) => {\n      // console.log(state)\n      return state\n    })\n    socket.current.emit(\"join chat\", chatId)\n    return data;\n   \n    }\n    catch(error){\n      // console.log('fetching message is not possible')\n    }\n\n  }\n  const saveImg = async () => {\n    let options = {\n      quality: 1,\n      base64: false,\n      // exif: true,\n      storageOptions: {\n        skipBackup: true,\n        path: 'images'\n       }\n    };\n    const formData = new FormData()\n   const testData ={\n    content: \"\",\n    chatId: chatId\n   }\n    let newPhoto = await cameraRef.current.takePictureAsync(options);\n    setImage(newPhoto)\n    let filename = newPhoto.uri.split('/').pop();\n    // console.log(filename)\n    // console.log(newPhoto)\n    // // console.log(data:image/jpg + base64newPhoto.base64)\n    formData.append('image', {\n      name: filename,\n      uri: newPhoto.uri ,\n      type: 'image/jpg',\n    });\n    formData.append('content', testData.content);\n    formData.append('chatId', testData.chatId);\n    // console.log(formData)\n    // console.log('end of line here ')\n    // formData.append('content', null);\n    // formData.append('chatId', chatId);\n  \n    // console.log(newPhoto.data)\n    // const data = await axios.post(\"http://192.168.100.2:5000/api/images/addImg\", newPhoto.uri)\n    // setImage(newPhoto);\n  //  console.log(formData)\n    try{\n      \n      // const config = {\n        \n      //   headers: {\n      //     'Accept': 'application/json',\n      //     'Content-Type': 'multipart/form-data',\n      //     Authorization: `Bearer ${user.token}`\n\n\n      //   },\n      //   body: JSON.stringify({\n      //     imgsource: newPhoto.base64,\n      //   }),\n      //   body: formData\n      //  };\n      const config = {\n          \n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n\n    const {data} = await axios.post(\"http://192.168.100.2:5000/api/message/\",formData, config)\n    //   headers: {\n    //     Accept: 'application/json',\n    //     'Content-Type': 'multipart/form-data',\n    //   },\n    // })\n    // setcameratest(false)\n    // setmessageHeader(false)\n    // setImage(null)\n    socket.current.emit(\"new message\", data)\n  setMessages([...messages, data])\n  setmessageSentOrReceived(false)\n  setfetchAgain(true)\n  setfetchAgain(false)\n    console.log('message + image saved successfully')\n    // const data = await axios.get(\"http://192.168.100.2:5000/api/images/getImg\")\n    //   console.log(data)\n    // console.log('image retrieved successfully')\n\n\n  }\n  \n    \n  catch (error) {\n    console.log(error);\n  }\n\n  }\n  const getImgs = async() => {\n    // console.log(\"try\")\n    try{\n      const {data} = await  axios.get(\"http://192.168.100.2:5000/api/images/retrieveImg\")\n      setgetPics(data)\n      // console.log(data)\n    }\n    catch(err){\n      console.log(err.message)\n    }\n    \n  }\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value)\n     \n    if(!socketConnected) return\n\n    if(!typing) {\n     setTyping(true)\n     socket.current.emit('typing', chatId);\n    }\n\n    let lastTypingTime = new Date().getTime()\n    var timerLength = 3000\n    setTimeout(() => {\n     var timeNow = new Date().getTime();\n     var timeDiff = timeNow - lastTypingTime;\n\n     if(timeDiff >= timerLength && typing) {\n         socket.current.emit(\"stop typing\", chatId)\n         setTyping(false)\n     }\n    }, timerLength);\n }\n\n if (hasPermissions === undefined) {\n  return <Text>Requesting permissions...</Text>\n} else if (!hasPermissions) {\n  return <Text style={{position:\"fixed\", top:\"50%\", left:\"50%\", transform:\"translate(-50%, -50%)\"}}>\n    Permission for camera not granted. Please change this in settings.</Text>\n}\n\nif(cameratest){\n  // return <Text style={styles.text}>cemera test</Text>\n  return <View style={styles.container2}>\n  \n   \n    <Camera\n      style={styles.camera}\n      ref={cameraRef}\n      // autoFocus={null}\n      >\n           {/* <Pressable  style={styles.text2} onPress={takePic}>\n           <Ionicons name=\"md-camera-reverse-outline\" size={24} color=\"black\" />\n           </Pressable> */}\n           <Pressable onPress={() => {\n            setcameratest(false)\n            setmessageHeader(false)\n            setRefresh(false)\n           }}>\n           <MaterialCommunityIcons name=\"close-outline\" size={50} color=\"white\"  style={styles.close}/>\n           </Pressable>\n           <Pressable  style={styles.text2} \n           onPress={()=> {\n        setRefresh(true)\n         saveImg()\n         \n         // sendMessage()\n          \n          // getImgs()\n          // setcameraOnOff(false)\n          \n            } }\n           >\n          <MaterialCommunityIcons name=\"camera-iris\" size={60} color=\"white\" style={styles.minicamera} />\n       </Pressable>\n      \n      </Camera>\n      {/* <View>\n      {getPics && getPics.map(img => {\n        \n        console.log(publicFolder + img.image)\n        // return <Text key={img._id}>{img.image}</Text>\n        return <Image key={img._id} style={styles.img} source={{uri: `http://192.168.100.2:5000/images/${img.image}` }} />\n        \n      })}\n      </View> */}\n     \n \n \n</View>\n}\n\n// if(image){\n//   const savePhoto = () => {\n//       MediaLibrary.saveToLibraryAsync(image.uri).then(() => {\n//           setImage(undefined);\n//         });\n\n//   }\n//   return (\n//       <SafeAreaView style={styles.container2}>\n//         <Image style={styles.preview} source={{ uri: \"data:image/jpg;base64,\" + image.base64 }} />\n//         {/* <Button title=\"Share\" onPress={sharePic} /> */}\n//         {hasMediaLibPermissions ? <Button title=\"Save\" onPress={savePhoto} /> : undefined}\n//         <Button title=\"Discard\" onPress={() => setImage(undefined)} />\n//       </SafeAreaView>\n//     );\n//   }\n  \n\n\n \n\n  return (\n   \n  //     <GiftedChat\n  //   // messages={messages}\n  //   // onSend={newMessage => handleSend(newMessage)}\n  //   onSend={sendMessage()}\n    \n  //   user={{ _id: 1 }}\n  //   placeholder=\"Type your message here\"\n  //   alwaysShowSend\n  //   renderSend={renderSend}\n  //   scrollToBottom\n  //   renderLoading={renderLoading}\n\n  // />\n//   <SafeAreaView edges={['top']} style = {styles.container}>\n//   <AntDesign name='plus' size = {24} color = \"#593196\"/>\n//   <TextInput \n//       value={newmessage}\n//       onChangeText={setNewMessage}\n//       style = {styles.input} \n//       placeholder='type your message...'/>\n//   <MaterialIcons style = {styles.send} name='send' size={24} color = \"#17141f\"/>\n// </SafeAreaView>\n/* <KeyboardAvoidingView \n   style={{position: 'absolute', left: 0, right: 0, bottom: 0}}\n   behavior=\"position\"\n > \n//  </KeyboardAvoidingView>*/\n<>\n    <View ref={myRef} style={{marginBottom:20, paddingBottom:25}}>\n    <ScrollableFeed messages={messages} />\n    </View>\n  \n\n   <SafeAreaView   style={{position: 'absolute', left: 0, right: 0, bottom: 0,flexDirection: \"row\",\n   backgroundColor: \"#f9f8fc\",\n   padding: 5,\n   paddingHorizontal: 10,}}\n   behavior=\"position\"> \n   {/* <AntDesign name='plus' size = {24} color = \"#593196\"/> */}\n    {isTyping ? <View>\n    <Text> isloading... </Text>\n    </View> : null}\n   <TextInput \n      value={newmessage}\n      \n      onChangeText={setNewMessage}\n      onChange={typingHandler}\n      style = {styles.input}\n      placeholder='Type your message...'\n      onKeyPress={(keyPress) => {\n        if(keyPress.key==\"Enter\"){\n          sendMessage()\n        }\n      }}\n      />\n    <Pressable onPress={() => {\n      CameraFeature()\n      setmessageHeader(true)\n      }}>\n    <AntDesign name=\"camera\" size={24} color=\"black\" />\n    </Pressable>\n    {/* <Pressable onPress={() => sendMessage()}> */}\n    <Pressable onPress={() => {\n      if(user._id){\n        let newMessages = messages.concat([\n          {\n            content: newmessage,\n            created_at: new Date(),\n            sender_id: user._id\n          }\n  \n  \n        ]\n        )\n        storage.set('message', JSON.stringify(newMessages))\n        let mm = JSON.parse(storage.getString('message'))\n  \n        console.log(\"message updated:\", mm)\n        setMessages(mm)\n      }\n     \n    }}>\n    <MaterialIcons  name='send' size={24} color = \"#17141f\"/>\n    </Pressable>\n  \n</SafeAreaView> \n\n</>  \n    \n  \n  \n   \n  )\n}\n\n\n\nexport default MessagingScreen\n\nconst styles = StyleSheet.create({\n  sendingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text2: {\n    color: \"green\",\n    \n    marginTop: \"150%\",\n    \n    marginLeft: 165,\n    // borderColor: \"red\",\n    // borderWidth: 10,\n    justifyContent: \"center\",\n    width: \"40%\"\n\n\n },\n minicamera: {\n  height: 100\n },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  close: {\n    marginLeft: 350,\n    marginTop: 40\n  },\n  container: {\n    flexDirection: \"row\",\n    backgroundColor: \"#f9f8fc\",\n    padding: 5,\n    paddingHorizontal: 10,\n},\ninput: {\n    flex: 1,\n    backgroundColor: \"white\",\n    padding: 5,\n    paddingHorizontal: 10,\n    marginHorizontal: 10,\n    borderRadius: 50,\n    borderColor: \"lightgray\",\n    borderWidth: StyleSheet.hairlineWidth,\n},\ncamera: {\n   marginTop: 0,\n   fontSize: 20\n},\ntext :{\n  marginTop: 20\n},\ncontainer2: {\n  // flex:1,\n  // marginTop: 200,\n  // marginLeft: 180,\n  // backgroundColor: \"black\"\n},\ncontainer3: {\n  // flex:1,\n  // marginTop: 200,\n  // marginLeft: 180,\n  // backgroundColor: \"black\"\n},\ncamera: {   \n  // flex: 1,\n height: \"100%\"\n},\npreview: {\n  alignSelf: 'stretch',\n  flex: 1\n}\n\n  \n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}