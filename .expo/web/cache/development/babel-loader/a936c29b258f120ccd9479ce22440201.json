{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthScreen = function (_React$Component) {\n  _inherits(AuthScreen, _React$Component);\n  var _super = _createSuper(AuthScreen);\n  function AuthScreen() {\n    var _this;\n    _classCallCheck(this, AuthScreen);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      user: null\n    };\n    _this.initAsync = _asyncToGenerator(function* () {\n      yield GoogleSignIn.initAsync({\n        clientId: '1078318868264-95l71fhnqnt70dh6q38t31hn2ukurdll.apps.googleusercontent.com'\n      });\n      _this._syncUserWithStateAsync();\n    });\n    _this._syncUserWithStateAsync = _asyncToGenerator(function* () {\n      var user = yield GoogleSignIn.signInSilentlyAsync();\n      _this.setState({\n        user: user\n      });\n    });\n    _this.signOutAsync = _asyncToGenerator(function* () {\n      yield GoogleSignIn.signOutAsync();\n      _this.setState({\n        user: null\n      });\n    });\n    _this.signInAsync = _asyncToGenerator(function* () {\n      try {\n        yield GoogleSignIn.askForPlayServicesAsync();\n        var _yield$GoogleSignIn$s = yield GoogleSignIn.signInAsync(),\n          type = _yield$GoogleSignIn$s.type,\n          user = _yield$GoogleSignIn$s.user;\n        if (type === 'success') {\n          _this._syncUserWithStateAsync();\n        }\n      } catch (_ref5) {\n        var message = _ref5.message;\n        alert('login: Error:' + message);\n      }\n    });\n    _this.onPress = function () {\n      if (_this.state.user) {\n        _this.signOutAsync();\n      } else {\n        _this.signInAsync();\n      }\n    };\n    return _this;\n  }\n  _createClass(AuthScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: \"white\",\n          marginTop: \"30vw\",\n          width: '60vw',\n          marginLeft: \"20vw\",\n          height: '47px',\n          borderRadius: 10,\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginBottom: 6,\n          letterSpacing: 2,\n          cursor: \"pointer\"\n        },\n        onPress: this.onPress,\n        children: \"Toggle Auth\"\n      });\n    }\n  }]);\n  return AuthScreen;\n}(React.Component);\nexport { AuthScreen as default };","map":{"version":3,"names":["React","GoogleSignIn","TouchableOpacity","AuthScreen","state","user","initAsync","clientId","_syncUserWithStateAsync","signInSilentlyAsync","setState","signOutAsync","signInAsync","askForPlayServicesAsync","type","message","alert","onPress","backgroundColor","marginTop","width","marginLeft","height","borderRadius","alignItems","justifyContent","marginBottom","letterSpacing","cursor","Component"],"sources":["/home/dagmawi/personal/borsa/ui/borsa-ui/src/screens/AuthScreens/LoginWithGoogle.js"],"sourcesContent":["\nimport React from 'react';\nimport { Text } from 'react-native';\nimport * as GoogleSignIn from 'expo-google-sign-in';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nexport default class AuthScreen extends React.Component {\n  state = { user: null };\n\n  componentDidMount() {\n    this.initAsync();\n  }\n\n  initAsync = async () => {\n    await GoogleSignIn.initAsync({\n      // You may ommit the clientId when the firebase `googleServicesFile` is configured\n      clientId: '1078318868264-95l71fhnqnt70dh6q38t31hn2ukurdll.apps.googleusercontent.com',\n    });\n    this._syncUserWithStateAsync();\n  };\n\n  _syncUserWithStateAsync = async () => {\n    const user = await GoogleSignIn.signInSilentlyAsync();\n    this.setState({ user });\n  };\n\n  signOutAsync = async () => {\n    await GoogleSignIn.signOutAsync();\n    this.setState({ user: null });\n  };\n\n  signInAsync = async () => {\n    try {\n      await GoogleSignIn.askForPlayServicesAsync();\n      const { type, user } = await GoogleSignIn.signInAsync();\n      if (type === 'success') {\n        this._syncUserWithStateAsync();\n      }\n    } catch ({ message }) {\n      alert('login: Error:' + message);\n    }\n  };\n\n  onPress = () => {\n    if (this.state.user) {\n      this.signOutAsync();\n    } else {\n      this.signInAsync();\n    }\n  };\n\n  render() {\n    return <TouchableOpacity style={{\n    backgroundColor:\"white\",\n    marginTop:\"30vw\",\n    width: '60vw',\n    marginLeft:\"20vw\",\n    height: '47px',\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 6,\n    letterSpacing:2,\n    cursor:\"pointer\",\n  }} onPress={this.onPress}>Toggle Auth</TouchableOpacity>;\n  }\n}"],"mappings":";;;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,OAAO,KAAKC,YAAY,MAAM,qBAAqB;AACnD,SAASC,gBAAgB,QAAQ,8BAA8B;AAAC;AAAA,IAE3CC,UAAU;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAC7BC,KAAK,GAAG;MAAEC,IAAI,EAAE;IAAK,CAAC;IAAA,MAMtBC,SAAS,qBAAG,aAAY;MACtB,MAAML,YAAY,CAACK,SAAS,CAAC;QAE3BC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACF,MAAKC,uBAAuB,EAAE;IAChC,CAAC;IAAA,MAEDA,uBAAuB,qBAAG,aAAY;MACpC,IAAMH,IAAI,SAASJ,YAAY,CAACQ,mBAAmB,EAAE;MACrD,MAAKC,QAAQ,CAAC;QAAEL,IAAI,EAAJA;MAAK,CAAC,CAAC;IACzB,CAAC;IAAA,MAEDM,YAAY,qBAAG,aAAY;MACzB,MAAMV,YAAY,CAACU,YAAY,EAAE;MACjC,MAAKD,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAK,CAAC,CAAC;IAC/B,CAAC;IAAA,MAEDO,WAAW,qBAAG,aAAY;MACxB,IAAI;QACF,MAAMX,YAAY,CAACY,uBAAuB,EAAE;QAC5C,kCAA6BZ,YAAY,CAACW,WAAW,EAAE;UAA/CE,IAAI,yBAAJA,IAAI;UAAET,IAAI,yBAAJA,IAAI;QAClB,IAAIS,IAAI,KAAK,SAAS,EAAE;UACtB,MAAKN,uBAAuB,EAAE;QAChC;MACF,CAAC,CAAC,cAAoB;QAAA,IAAXO,OAAO,SAAPA,OAAO;QAChBC,KAAK,CAAC,eAAe,GAAGD,OAAO,CAAC;MAClC;IACF,CAAC;IAAA,MAEDE,OAAO,GAAG,YAAM;MACd,IAAI,MAAKb,KAAK,CAACC,IAAI,EAAE;QACnB,MAAKM,YAAY,EAAE;MACrB,CAAC,MAAM;QACL,MAAKC,WAAW,EAAE;MACpB;IACF,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAxCD,6BAAoB;MAClB,IAAI,CAACN,SAAS,EAAE;IAClB;EAAC;IAAA;IAAA,OAwCD,kBAAS;MACP,OAAO,KAAC,gBAAgB;QAAC,KAAK,EAAE;UAChCY,eAAe,EAAC,OAAO;UACvBC,SAAS,EAAC,MAAM;UAChBC,KAAK,EAAE,MAAM;UACbC,UAAU,EAAC,MAAM;UACjBC,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,EAAE;UAChBC,UAAU,EAAE,QAAQ;UACpBC,cAAc,EAAE,QAAQ;UACxBC,YAAY,EAAE,CAAC;UACfC,aAAa,EAAC,CAAC;UACfC,MAAM,EAAC;QACT,CAAE;QAAC,OAAO,EAAE,IAAI,CAACX,OAAQ;QAAA,UAAC;MAAW,EAAmB;IACxD;EAAC;EAAA;AAAA,EA3DqCjB,KAAK,CAAC6B,SAAS;AAAA,SAAlC1B,UAAU"},"metadata":{},"sourceType":"module"}