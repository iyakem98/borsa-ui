{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ChatContext = createContext();\nvar ChatProvider = function ChatProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedChat = _useState2[0],\n    setSelectedChat = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatSelected = _useState4[0],\n    setchatSelected = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    notification = _useState6[0],\n    setNotification = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    fetchAgain = _useState8[0],\n    setfetchAgain = _useState8[1];\n  var _useState9 = useState(true),\n    _useState10 = _slicedToArray(_useState9, 2),\n    atChatScreen = _useState10[0],\n    setatChatScreen = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    sentMessage = _useState12[0],\n    setsentMessage = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    receivedMessage = _useState14[0],\n    setreceivedMessage = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    messageSentOrReceived = _useState16[0],\n    setmessageSentOrReceived = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    onlineStatus = _useState18[0],\n    setonlineStatus = _useState18[1];\n  var _useState19 = useState(\"Chats\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    chatRoute = _useState20[0],\n    setchatRoute = _useState20[1];\n  var _useState21 = useState(),\n    _useState22 = _slicedToArray(_useState21, 2),\n    chats = _useState22[0],\n    setChats = _useState22[1];\n  var _useState23 = useState(true),\n    _useState24 = _slicedToArray(_useState23, 2),\n    triggerChange = _useState24[0],\n    settriggerChange = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    messageHeader = _useState26[0],\n    setmessageHeader = _useState26[1];\n  var _useState27 = useState(null),\n    _useState28 = _slicedToArray(_useState27, 2),\n    date = _useState28[0],\n    setDate = _useState28[1];\n  return _jsx(ChatContext.Provider, {\n    value: {\n      selectedChat: selectedChat,\n      setSelectedChat: setSelectedChat,\n      chatSelected: chatSelected,\n      setchatSelected: setchatSelected,\n      notification: notification,\n      setNotification: setNotification,\n      fetchAgain: fetchAgain,\n      setfetchAgain: setfetchAgain,\n      chats: chats,\n      setChats: setChats,\n      atChatScreen: atChatScreen,\n      setatChatScreen: setatChatScreen,\n      sentMessage: sentMessage,\n      setsentMessage: setsentMessage,\n      receivedMessage: receivedMessage,\n      setreceivedMessage: setreceivedMessage,\n      messageSentOrReceived: messageSentOrReceived,\n      setmessageSentOrReceived: setmessageSentOrReceived,\n      onlineStatus: onlineStatus,\n      setonlineStatus: setonlineStatus,\n      chatRoute: chatRoute,\n      setchatRoute: setchatRoute,\n      triggerChange: triggerChange,\n      settriggerChange: settriggerChange,\n      messageHeader: messageHeader,\n      setmessageHeader: setmessageHeader,\n      date: date,\n      setDate: setDate\n    },\n    children: children\n  });\n};\nexport var ChatState = function ChatState() {\n  return useContext(ChatContext);\n};\nexport default ChatProvider;","map":{"version":3,"names":["React","createContext","useContext","useState","ChatContext","ChatProvider","children","selectedChat","setSelectedChat","chatSelected","setchatSelected","notification","setNotification","fetchAgain","setfetchAgain","atChatScreen","setatChatScreen","sentMessage","setsentMessage","receivedMessage","setreceivedMessage","messageSentOrReceived","setmessageSentOrReceived","onlineStatus","setonlineStatus","chatRoute","setchatRoute","chats","setChats","triggerChange","settriggerChange","messageHeader","setmessageHeader","date","setDate","ChatState"],"sources":["/home/dagmawi/personal/borsa/myborsa/borsa-ui/src/context/ChatProvider.js"],"sourcesContent":["import React, { createContext, useContext,  useState } from \"react\";\n\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  \n  const [selectedChat, setSelectedChat] = useState(false);\n  const [chatSelected, setchatSelected] = useState(false);\n  const [notification, setNotification] = useState([]);\n  const [fetchAgain, setfetchAgain] = useState(false)\n  const [atChatScreen, setatChatScreen] = useState(true)\n  const [sentMessage, setsentMessage] = useState(false)\n  const [receivedMessage, setreceivedMessage] = useState(false)\n  const [messageSentOrReceived, setmessageSentOrReceived] = useState(false)\n  const [onlineStatus, setonlineStatus] = useState(false)\n  const [chatRoute, setchatRoute] = useState(\"Chats\")\n  const [chats, setChats] = useState();\n  const [triggerChange, settriggerChange] = useState(true);\n  const [messageHeader, setmessageHeader] = useState(false);\n  const [date, setDate] = useState(null)\n\n\n  \n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        chatSelected,\n        setchatSelected,\n        notification,\n        setNotification,\n        fetchAgain,\n        setfetchAgain,\n        chats,\n        setChats,\n        atChatScreen,\n        setatChatScreen,\n        sentMessage,\n        setsentMessage,\n        receivedMessage,\n        setreceivedMessage,\n        messageSentOrReceived,\n        setmessageSentOrReceived,\n        onlineStatus,\n        setonlineStatus,\n        chatRoute, \n        setchatRoute,\n        triggerChange, \n        settriggerChange,\n        messageHeader, \n        setmessageHeader,\n        date,\n        setDate\n\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAGC,QAAQ,QAAQ,OAAO;AAAC;AAGpE,IAAMC,WAAW,GAAGH,aAAa,EAAE;AAEnC,IAAMI,YAAY,GAAG,SAAfA,YAAY,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAE9B,gBAAwCH,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDI,YAAY;IAAEC,eAAe;EACpC,iBAAwCL,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDM,YAAY;IAAEC,eAAe;EACpC,iBAAwCP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7CQ,YAAY;IAAEC,eAAe;EACpC,iBAAoCT,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA5CU,UAAU;IAAEC,aAAa;EAChC,iBAAwCX,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/CY,YAAY;IAAEC,eAAe;EACpC,kBAAsCb,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA9Cc,WAAW;IAAEC,cAAc;EAClC,kBAA8Cf,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtDgB,eAAe;IAAEC,kBAAkB;EAC1C,kBAA0DjB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlEkB,qBAAqB;IAAEC,wBAAwB;EACtD,kBAAwCnB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDoB,YAAY;IAAEC,eAAe;EACpC,kBAAkCrB,QAAQ,CAAC,OAAO,CAAC;IAAA;IAA5CsB,SAAS;IAAEC,YAAY;EAC9B,kBAA0BvB,QAAQ,EAAE;IAAA;IAA7BwB,KAAK;IAAEC,QAAQ;EACtB,kBAA0CzB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjD0B,aAAa;IAAEC,gBAAgB;EACtC,kBAA0C3B,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlD4B,aAAa;IAAEC,gBAAgB;EACtC,kBAAwB7B,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/B8B,IAAI;IAAEC,OAAO;EAKpB,OACE,KAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACL3B,YAAY,EAAZA,YAAY;MACZC,eAAe,EAAfA,eAAe;MACfC,YAAY,EAAZA,YAAY;MACZC,eAAe,EAAfA,eAAe;MACfC,YAAY,EAAZA,YAAY;MACZC,eAAe,EAAfA,eAAe;MACfC,UAAU,EAAVA,UAAU;MACVC,aAAa,EAAbA,aAAa;MACba,KAAK,EAALA,KAAK;MACLC,QAAQ,EAARA,QAAQ;MACRb,YAAY,EAAZA,YAAY;MACZC,eAAe,EAAfA,eAAe;MACfC,WAAW,EAAXA,WAAW;MACXC,cAAc,EAAdA,cAAc;MACdC,eAAe,EAAfA,eAAe;MACfC,kBAAkB,EAAlBA,kBAAkB;MAClBC,qBAAqB,EAArBA,qBAAqB;MACrBC,wBAAwB,EAAxBA,wBAAwB;MACxBC,YAAY,EAAZA,YAAY;MACZC,eAAe,EAAfA,eAAe;MACfC,SAAS,EAATA,SAAS;MACTC,YAAY,EAAZA,YAAY;MACZG,aAAa,EAAbA,aAAa;MACbC,gBAAgB,EAAhBA,gBAAgB;MAChBC,aAAa,EAAbA,aAAa;MACbC,gBAAgB,EAAhBA,gBAAgB;MAChBC,IAAI,EAAJA,IAAI;MACJC,OAAO,EAAPA;IAEF,CAAE;IAAA,UAED5B;EAAQ,EACY;AAE3B,CAAC;AAED,OAAO,IAAM6B,SAAS,GAAG,SAAZA,SAAS,GAAS;EAC7B,OAAOjC,UAAU,CAACE,WAAW,CAAC;AAChC,CAAC;AAED,eAAeC,YAAY"},"metadata":{},"sourceType":"module"}