{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Ionicons } from '@expo/vector-icons';\nimport moment from 'moment';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useSelector } from 'react-redux';\nimport { isSameSender, isLastMessage, isSameSenderMargin, isSameUser, getSender } from \"../../../ChatConfig/ChatLogics\";\nimport { ChatState } from \"../../../context/ChatProvider\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ScrollableFeed = function ScrollableFeed(_ref) {\n  var messages = _ref.messages;\n  var scrollViewRef = useRef();\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var _ChatState = ChatState(),\n    sentMessage = _ChatState.sentMessage,\n    setsentMessage = _ChatState.setsentMessage,\n    receivedMessage = _ChatState.receivedMessage,\n    setreceivedMessage = _ChatState.setreceivedMessage,\n    messageSentOrReceived = _ChatState.messageSentOrReceived,\n    setmessageSentOrReceived = _ChatState.setmessageSentOrReceived;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    localrec = _useState2[0],\n    setlocalrec = _useState2[1];\n  useEffect(function () {\n    console.log(sentMessage);\n    console.log(\"platformmm\", Platform.OS);\n  }, []);\n  var publicFolder = \"http://192.168.100.2:5000/images/\";\n  return _jsx(KeyboardAvoidingView, {\n    behavior: Platform.OS === 'web' ? 'padding' : 'height',\n    style: styles.keyboardAvoiding,\n    children: _jsx(ScrollView, {\n      ref: scrollViewRef,\n      onContentSizeChange: function onContentSizeChange() {\n        return scrollViewRef.current.scrollToEnd({\n          animated: false\n        });\n      },\n      style: {\n        backgroundColor: \"#fff\",\n        height: \"80%\",\n        paddingBottom: 1\n      },\n      children: messages && messages.map(function (m, i) {\n        var formatted_date = moment(m.createdAt).format(\"LT\");\n        return _jsx(_Fragment, {\n          children: m.content == \"\" ? _jsx(View, {\n            style: [styles.container2, {\n              backgroundColor: \"\" + (m.sender._id === user._id ? \"#593196\" : \"#E8E8E8\"),\n              alignSelf: \"\" + (m.sender._id === user._id ? \"flex-end\" : \"flex-start\"),\n              marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10\n            }],\n            children: _jsx(ImageBackground, {\n              source: {\n                uri: \"http://192.168.100.2:5000/images/\" + m.image\n              },\n              resizeMode: \"cover\",\n              style: {\n                color: \"\" + (m.sender._id === user._id ? \"white\" : \"black\"),\n                flex: 1,\n                height: 200\n              },\n              children: m.sender._id === user._id && _jsx(Ionicons, {\n                name: \"checkmark-done-sharp\",\n                size: 40,\n                style: {\n                  color: \"purple\",\n                  marginTop: 160\n                }\n              })\n            })\n          }) : _jsxs(View, {\n            style: [styles.container, {\n              backgroundColor: \"\" + (m.sender._id === user._id ? \"#E8E8E8\" : \"#593196\"),\n              color: \"\" + (m.sender._id === user._id ? \"white\" : \"black\"),\n              alignSelf: \"\" + (m.sender._id === user._id ? \"flex-start\" : \"flex-end\"),\n              marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10\n            }],\n            children: [_jsx(Text, {\n              style: {\n                color: \"\" + (m.sender._id == user._id ? \"black\" : \"white\")\n              },\n              children: m.content\n            }, m._id), _jsxs(Text, {\n              style: {\n                color: \"\" + (m.sender._id == user._id ? \"black\" : \"white\")\n              },\n              children: [formatted_date, \"\\xA0\\xA0\", _jsx(Ionicons, {\n                name: \"checkmark-outline\",\n                size: 14,\n                color: \"white\"\n              })]\n            })]\n          })\n        });\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    marginHorizontal: 10,\n    padding: 10,\n    borderRadius: 10,\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.10,\n    shadowRadius: 1.0,\n    elevation: 1\n  },\n  container2: {\n    backgroundColor: '#fff',\n    marginHorizontal: 10,\n    borderRadius: 10,\n    width: \"80%\",\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.10,\n    shadowRadius: 1.0,\n    elevation: 1\n  },\n  img: {\n    height: 100,\n    width: 100,\n    marginTop: 10\n  },\n  time: {\n    alignSelf: \"flex-end\"\n  },\n  keyboardAvoiding: {\n    flex: 1\n  }\n});\nexport default ScrollableFeed;","map":{"version":3,"names":["Ionicons","moment","React","useEffect","useRef","useState","useSelector","isSameSender","isLastMessage","isSameSenderMargin","isSameUser","getSender","ChatState","FontAwesome5","ScrollableFeed","messages","scrollViewRef","state","auth","user","sentMessage","setsentMessage","receivedMessage","setreceivedMessage","messageSentOrReceived","setmessageSentOrReceived","localrec","setlocalrec","console","log","Platform","OS","publicFolder","styles","keyboardAvoiding","current","scrollToEnd","animated","backgroundColor","height","paddingBottom","map","m","i","formatted_date","createdAt","format","content","container2","sender","_id","alignSelf","marginTop","uri","image","color","flex","container","StyleSheet","create","marginHorizontal","padding","borderRadius","maxWidth","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","img","time"],"sources":["/home/dagmawi/personal/borsa/ui/borsa-ui/src/components/Chats/ScrollableFeed.js/ScrollableFeed.js"],"sourcesContent":["import { Ionicons } from '@expo/vector-icons'\nimport moment from 'moment'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Text, View, ScrollView, StyleSheet, Image, ImageBackground, KeyboardAvoidingView, Platform } from 'react-native'\nimport { useSelector } from 'react-redux'\nimport { isSameSender, isLastMessage, isSameSenderMargin, isSameUser, getSender } from '../../../ChatConfig/ChatLogics'\nimport { ChatState } from '../../../context/ChatProvider'\nimport { FontAwesome5 } from '@expo/vector-icons';\n\n\nconst ScrollableFeed = ({messages}) => {\n  const scrollViewRef = useRef();\n  const { user } = useSelector((state) => state.auth)\n  const {\n    sentMessage, setsentMessage, \n    receivedMessage, setreceivedMessage,\n    messageSentOrReceived, setmessageSentOrReceived\n        } = ChatState()\n        const [localrec, setlocalrec] = useState(false)\n    \n  useEffect(() =>{\n    // console.log(messages)\n    // console.log(messageSentOrReceived)\n    console.log(sentMessage)\n    console.log(\"platformmm\", Platform.OS)\n    // console.log(receivedMessage)\n  }, [])\n  const publicFolder = \"http://192.168.100.2:5000/images/\"\n  return (\n    <KeyboardAvoidingView\n    behavior={Platform.OS === 'web' ? 'padding' : 'height'}\n    style={styles.keyboardAvoiding}>\n   <ScrollView\n    ref={scrollViewRef}\n    onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: false })}\n    style = {{\n      backgroundColor: \"#fff\", \n      height: \"80%\",\n      paddingBottom: 1,\n      }}>\n    {messages && messages.map((m, i) => {\n      // console.log(m.image)\n      // <Text>{m.sender._id}</Text>\n    // console.log(m.createdAt)\n    const formatted_date = moment(m.createdAt).format(\"LT\")\n      return <>\n        {m.content == \"\" ? \n        <View style = {[styles.container2, {\n          backgroundColor:  `${\n            m.sender._id === user._id ? \"#593196\" : \"#E8E8E8\"\n        }`,\n          alignSelf:  `${\n            m.sender._id === user._id ? \"flex-end\" : \"flex-start\"\n        }`,\n        marginTop: isSameUser(messages, m , i , user._id)? 3: 10, \n      }]}>\n          \n        <ImageBackground  source={{uri: `http://192.168.100.2:5000/images/${m.image}` }} resizeMode= 'cover' style={{color: `${\n                m.sender._id === user._id ? \"white\" : \"black\"\n            }`, flex: 1, height: 200,}}>\n                {\n            m.sender._id === user._id &&\n         \n        //  <Ionicons name=\"checkmark-outline\" size={20} color=\"white\" />\n        // <Text style={{color: \"red\", marginTop:170}}>Sent</Text>\n        \n        <Ionicons name=\"checkmark-done-sharp\" size={40} style={{color: \"purple\", marginTop:160}} />\n        \n         \n         \n         \n          // <Ionicons name=\"checkmark-done-sharp\" size={20} color=\"white\" />\n        }\n          \n         \n        \n        \n        {/* <Ionicons name=\"checkmark-done-sharp\" size={40} style={{color: \"purple\", marginTop:160}} /> */}\n        \n               </ImageBackground>\n       \n        </View>\n        \n        :\n\n        \n        <View style = {[styles.container, {\n        backgroundColor:  `${\n          m.sender._id === user._id ? \"#E8E8E8\" : \"#593196\" \n      }`,\n      color:  `${\n        m.sender._id === user._id ? \"white\" : \"black\" \n    }`,\n        alignSelf:  `${\n          m.sender._id === user._id ? \"flex-start\" : \"flex-end\"\n      }`,\n      marginTop: isSameUser(messages, m , i , user._id)? 3: 10, \n    }]}>\n           <Text key={m._id} style={{\n        \n          color: `${\n              m.sender._id == user._id ? \"black\" : \"white\"\n          }`,\n      \n      }}>\n      {m.content}\n       </Text>\n          \n       \n      <Text style={{color:`${ m.sender._id == user._id ? \"black\" : \"white\"}`}}>{formatted_date}\n      &nbsp;&nbsp;\n      {/* <Ionicons name=\"checkmark-done\" size={14} color=\"white\" /> */}\n      <Ionicons name=\"checkmark-outline\" size={14} color=\"white\" />\n      {/* <Ionicons name=\"checkmark-outline\" size={14} color=\"white\" style={{opacity:.5}}/> */}\n      </Text>\n   </View>\n   } \n      </>\n     \n      \n       \n})}\n   </ScrollView>\n   </KeyboardAvoidingView>\n  )\n}\nconst styles = StyleSheet.create({\n  container: {\n      //backgroundColor: \"#E8E8E8\",\n      backgroundColor: '#fff',\n      marginHorizontal: 10,\n      padding: 10,\n      borderRadius: 10,\n      maxWidth: '80%',\n\n      shadowColor: '#000',\n      shadowOffset: {\n          width: 0,\n          height: 1,\n      },\n      \n      shadowOpacity: 0.10,\n      shadowRadius: 1.0,\n\n      elevation: 1,\n  },\n  container2: {\n      //backgroundColor: \"#E8E8E8\",\n      backgroundColor: '#fff',\n      marginHorizontal: 10,\n      // padding: 10,\n      borderRadius: 10,\n      // maxWidth: '80%',\n      width: \"80%\",\n      // height: 200,\n\n      shadowColor: '#000',\n      shadowOffset: {\n          width: 0,\n          height: 1,\n      },\n      \n      shadowOpacity: 0.10,\n      shadowRadius: 1.0,\n\n      elevation: 1,\n  },\n  img : {\n    height: 100,\n    width: 100,\n    marginTop: 10\n  },\n  time: {\n      alignSelf: \"flex-end\"\n  },\n  keyboardAvoiding: {\n    flex: 1,\n  }\n})\nexport default ScrollableFeed"],"mappings":"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"},"metadata":{},"sourceType":"module"}