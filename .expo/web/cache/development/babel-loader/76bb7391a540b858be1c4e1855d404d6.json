{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport moment from 'moment';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction RecentlyTest() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    date = _useState2[0],\n    setDate = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    lastseendateandtime = _useState4[0],\n    setlastseendateandtime = _useState4[1];\n  var _useState5 = useState(\"online\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    status = _useState6[0],\n    setStatus = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    getUser = _useState8[0],\n    setUser = _useState8[1];\n  var datte = moment();\n  console.log(datte.format());\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  useEffect(function () {}, []);\n  useEffect(function () {}, [lastseendateandtime]);\n  useEffect(function () {\n    function getUserData() {\n      return _getUserData.apply(this, arguments);\n    }\n    function _getUserData() {\n      _getUserData = _asyncToGenerator(function* () {\n        try {\n          var userId = user._id;\n          console.log(userId);\n          var config = {\n            headers: {\n              Authorization: \"Bearer \" + user.token\n            }\n          };\n          var _yield$axios$get = yield axios.get(\"http://192.168.100.2:5000/api/users/ret/\" + user._id, config),\n            data = _yield$axios$get.data;\n          console.log(data.lastSeen);\n        } catch (err) {\n          console.log(err);\n        }\n      });\n      return _getUserData.apply(this, arguments);\n    }\n    getUserData();\n  }, []);\n  var UpdateLastSeenAndStatus = function () {\n    var _ref = _asyncToGenerator(function* (status) {\n      try {\n        var config = {\n          headers: {\n            Authorization: \"Bearer \" + user.token\n          }\n        };\n        var now = moment();\n        var UpdatedLastSeen = now.format();\n        var _yield$axios$put = yield axios.put('http://192.168.100.2:5000/api/users/stat', {\n            userId: user._id,\n            status: status,\n            lastSeen: UpdatedLastSeen\n          }, config),\n          data = _yield$axios$put.data;\n        console.log('user status and last seen are updated');\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function UpdateLastSeenAndStatus(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    children: _jsxs(Text, {\n      children: [\"the time before user moves out of the app  is at \", lastseendateandtime, \" \"]\n    })\n  });\n}\nexport default RecentlyTest;","map":{"version":3,"names":["moment","useState","useEffect","useSelector","axios","RecentlyTest","date","setDate","lastseendateandtime","setlastseendateandtime","status","setStatus","getUser","setUser","datte","console","log","format","state","auth","user","getUserData","userId","_id","config","headers","Authorization","token","get","data","lastSeen","err","UpdateLastSeenAndStatus","now","UpdatedLastSeen","put","error"],"sources":["/home/dagmawi/personal/borsa/myborsa/borsa-ui/src/screens/RecentlyTest.js"],"sourcesContent":["\nimport { Pressable, Text, View } from 'react-native'\nimport moment from 'moment'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nfunction RecentlyTest() {\n    const [date, setDate] = useState(null)\n    const [lastseendateandtime, setlastseendateandtime] = useState(null)\n    const [status, setStatus] = useState(\"online\")\n    const [getUser, setUser] = useState(null)\n    const datte  = moment()\n    console.log(datte.format())\n    const { user } = useSelector((state) => state.auth)\n    // setDate(datte.format(\"YYYY-MM-DD\"))\n    useEffect(() => {\n      // setDate(datte.format(\"LT\") + \" \" +  datte.format(\"YYYY-MM-DD\"))\n      // console.log(user.lastSeen)\n      // getUserData()\n    }, [])\n    useEffect(() => {\n      // setDate(datte.format(\"LT\") + \" \" +  datte.format(\"YYYY-MM-DD\"))\n      // console.log(user.lastSeen)\n      // getUserData()\n    }, [lastseendateandtime])\n    useEffect(() => {\n       async function getUserData ()  {\n    \n        try{\n          const userId = user._id\n          console.log(userId)\n          const   config = {\n              \n            headers: {\n             \n              Authorization: `Bearer ${user.token}`\n            },\n            // body: JSON.stringify({\n            //   imgsource: newPhoto.base64,\n            // }),\n            // body: formData\n           };\n      \n          const {data} = await axios.get(`http://192.168.100.2:5000/api/users/ret/${user._id}`, config)\n\n          console.log(data.lastSeen)\n          // setlastseendateandtime(moment(data.lastSeen).format(\"dddd, MMMM Do YYYY\") + \" \" + moment(data.lastSeen).format(\"LT\"))\n    \n        }\n        catch(err){\n          console.log(err)\n        }\n        \n       }\n       getUserData()\n    }, [])\n   \n  //  const getUserData = async () => {\n    \n  //   try{\n  //     const userId = user._id\n  //     console.log(userId)\n  //     const   config = {\n          \n  //       headers: {\n         \n  //         Authorization: `Bearer ${user.token}`\n  //       },\n  //       // body: JSON.stringify({\n  //       //   imgsource: newPhoto.base64,\n  //       // }),\n  //       // body: formData\n  //      };\n  \n  //     const {data} = await axios.get(`http://192.168.100.2:5000/api/users/ret/${user._id}`, config)\n  //     // console.log(data.lastSeen)\n  //     setlastseendateandtime(moment(data.lastSeen).format(\"dddd, MMMM Do YYYY\") + \" \" + moment(data.lastSeen).format(\"LT\"))\n\n  //   }\n  //   catch(err){\n  //     console.log(err)\n  //   }\n    \n  //  }\n  \n    const UpdateLastSeenAndStatus = async(status) =>{\n      try{\n\n      \n      const   config = {\n          \n        headers: {\n         \n          Authorization: `Bearer ${user.token}`\n        },\n        // body: JSON.stringify({\n        //   imgsource: newPhoto.base64,\n        // }),\n        // body: formData\n       };\n       const now = moment()\n       const UpdatedLastSeen = now.format()\n       const {data} = await axios.put('http://192.168.100.2:5000/api/users/stat', {\n        userId : user._id,\n        status: status,\n        lastSeen : UpdatedLastSeen\n        \n        \n      },\n      config)\n      console.log('user status and last seen are updated')\n    }\n    catch(error){\n      console.log(error)\n    }\n       \n\n    }\n    \n\n\n\n  return (\n    <View>\n      {/* <Pressable onPress={() => {\n        // UpdateLastSeenAndStatus(status)\n        getUserData()\n        }}>\n        <Text>click here to update user's status and last seen </Text>\n       \n       \n      </Pressable> */}\n      <Text>the time before user moves out of the app  is at {lastseendateandtime} </Text>\n        {/* <Text>today's date is {date} </Text>\n        <Text>user is away and last seen at user's last seen at = </Text>\n        <Text>user is back online</Text> */}\n    </View>\n  )\n}\n\nexport default RecentlyTest"],"mappings":";;;;;AAEA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,OAAO;AAAA;AAAA;AACzB,SAASC,YAAY,GAAG;EACpB,gBAAwBJ,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA/BK,IAAI;IAAEC,OAAO;EACpB,iBAAsDN,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA7DO,mBAAmB;IAAEC,sBAAsB;EAClD,iBAA4BR,QAAQ,CAAC,QAAQ,CAAC;IAAA;IAAvCS,MAAM;IAAEC,SAAS;EACxB,iBAA2BV,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAlCW,OAAO;IAAEC,OAAO;EACvB,IAAMC,KAAK,GAAId,MAAM,EAAE;EACvBe,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,EAAE,CAAC;EAC3B,mBAAiBd,WAAW,CAAC,UAACe,KAAK;MAAA,OAAKA,KAAK,CAACC,IAAI;IAAA,EAAC;IAA3CC,IAAI,gBAAJA,IAAI;EAEZlB,SAAS,CAAC,YAAM,CAIhB,CAAC,EAAE,EAAE,CAAC;EACNA,SAAS,CAAC,YAAM,CAIhB,CAAC,EAAE,CAACM,mBAAmB,CAAC,CAAC;EACzBN,SAAS,CAAC,YAAM;IAAA,SACEmB,WAAW;MAAA;IAAA;IAAA;MAAA,iCAA1B,aAA+B;QAE9B,IAAG;UACD,IAAMC,MAAM,GAAGF,IAAI,CAACG,GAAG;UACvBR,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;UACnB,IAAQE,MAAM,GAAG;YAEfC,OAAO,EAAE;cAEPC,aAAa,cAAYN,IAAI,CAACO;YAChC;UAKD,CAAC;UAEF,6BAAqBvB,KAAK,CAACwB,GAAG,8CAA4CR,IAAI,CAACG,GAAG,EAAIC,MAAM,CAAC;YAAtFK,IAAI,oBAAJA,IAAI;UAEXd,OAAO,CAACC,GAAG,CAACa,IAAI,CAACC,QAAQ,CAAC;QAG5B,CAAC,CACD,OAAMC,GAAG,EAAC;UACRhB,OAAO,CAACC,GAAG,CAACe,GAAG,CAAC;QAClB;MAED,CAAC;MAAA;IAAA;IACDV,WAAW,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EA8BN,IAAMW,uBAAuB;IAAA,6BAAG,WAAMtB,MAAM,EAAI;MAC9C,IAAG;QAGH,IAAQc,MAAM,GAAG;UAEfC,OAAO,EAAE;YAEPC,aAAa,cAAYN,IAAI,CAACO;UAChC;QAKD,CAAC;QACD,IAAMM,GAAG,GAAGjC,MAAM,EAAE;QACpB,IAAMkC,eAAe,GAAGD,GAAG,CAAChB,MAAM,EAAE;QACpC,6BAAqBb,KAAK,CAAC+B,GAAG,CAAC,0CAA0C,EAAE;YAC1Eb,MAAM,EAAGF,IAAI,CAACG,GAAG;YACjBb,MAAM,EAAEA,MAAM;YACdoB,QAAQ,EAAGI;UAGb,CAAC,EACDV,MAAM,CAAC;UAPCK,IAAI,oBAAJA,IAAI;QAQZd,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACtD,CAAC,CACD,OAAMoB,KAAK,EAAC;QACVrB,OAAO,CAACC,GAAG,CAACoB,KAAK,CAAC;MACpB;IAGA,CAAC;IAAA,gBAhCKJ,uBAAuB;MAAA;IAAA;EAAA,GAgC5B;EAKH,OACE,KAAC,IAAI;IAAA,UASH,MAAC,IAAI;MAAA,WAAC,mDAAiD,EAACxB,mBAAmB,EAAC,GAAC;IAAA;EAAO,EAI/E;AAEX;AAEA,eAAeH,YAAY"},"metadata":{},"sourceType":"module"}