{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { useNavigation } from '@react-navigation/native';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { getSender, getSenderFull } from \"../../../ChatConfig/ChatLogics\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { allMessages } from \"../../../features/message/messageSlice\";\nimport { ChatState } from \"../../../context/ChatProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\ndayjs.extend(relativeTime);\nvar ChatListItem = function ChatListItem(_ref) {\n  var chat = _ref.chat;\n  var navigation = useNavigation();\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var _useSelector2 = useSelector(function (state) {\n      return state.mess;\n    }),\n    messages = _useSelector2.messages;\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    mess = _useState2[0],\n    setMess = _useState2[1];\n  var _ChatState = ChatState(),\n    selectedChat = _ChatState.selectedChat,\n    setSelectedChat = _ChatState.setSelectedChat,\n    chats = _ChatState.chats,\n    setChats = _ChatState.setChats,\n    chatSelected = _ChatState.chatSelected,\n    setchatSelected = _ChatState.setchatSelected;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(allMessages(chat._id));\n    setSelectedChat(chat);\n    console.log(selectedChat);\n  }, []);\n  return _jsxs(Pressable, {\n    onPress: function onPress() {\n      return navigation.navigate('Messaging', {\n        chatId: chat._id,\n        userSelected: user != null ? getSenderFull(user, chat.users).userName : null\n      });\n    },\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: {\n        uri: user != null ? getSenderFull(user, chat.users).profilePic : null\n      },\n      style: styles.image\n    }), _jsx(View, {\n      style: styles.content,\n      children: _jsx(View, {\n        style: styles.row,\n        children: _jsx(Text, {\n          style: styles.name,\n          children: user != null ? getSenderFull(user, chat.users).firstName : null\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    marginHorizontal: 10,\n    marginVertical: 5,\n    height: 70\n  },\n  image: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginRight: 10\n  },\n  content: {\n    flex: 1,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: 'lightgray'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  name: {\n    flex: 1,\n    fontWeight: 'bold'\n  },\n  subTitle: {\n    color: \"gray\"\n  },\n  Tex: {\n    marginTop: 200\n  }\n});\nexport default ChatListItem;","map":{"version":3,"names":["useNavigation","dayjs","relativeTime","getSender","getSenderFull","useDispatch","useSelector","useEffect","useState","allMessages","ChatState","extend","ChatListItem","chat","navigation","state","auth","user","mess","messages","setMess","selectedChat","setSelectedChat","chats","setChats","chatSelected","setchatSelected","dispatch","_id","console","log","navigate","chatId","userSelected","users","userName","styles","container","uri","profilePic","image","content","row","name","firstName","StyleSheet","create","flexDirection","marginHorizontal","marginVertical","height","width","borderRadius","marginRight","flex","borderBottomWidth","hairlineWidth","borderBottomColor","fontWeight","subTitle","color","Tex","marginTop"],"sources":["/home/dagmawi/personal/borsa/ui/borsa-ui/src/components/Chats/ChatListItem/index.js"],"sourcesContent":["import {View, Text, Image, StyleSheet, Pressable} from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\nimport dayjs from 'dayjs'\nimport relativeTime  from 'dayjs/plugin/relativeTime'\nimport { getSender, getSenderFull } from '../../../ChatConfig/ChatLogics'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { allMessages } from '../../../features/message/messageSlice'\nimport { ChatState } from '../../../context/ChatProvider'\ndayjs.extend(relativeTime)\n\nconst ChatListItem = ({chat}) => {\n    const navigation = useNavigation();\n    const { user } = useSelector((state) => state.auth)\n    const {messages} = useSelector((state) => state.mess)\n   const [mess, setMess] = useState({})\n   const { selectedChat, setSelectedChat, chats, setChats, chatSelected, setchatSelected } = ChatState();\n    const dispatch =  useDispatch()\n    useEffect(() => {\n        dispatch(allMessages(chat._id))\n        setSelectedChat(chat)\n        console.log(selectedChat)\n     \n      \n\n    }, [])\n    return (\n        <Pressable onPress={() => navigation.navigate('Messaging', {chatId: chat._id, userSelected:\n            \n        user != null ? getSenderFull(user, chat.users).userName : null })}  style={styles.container}>\n            \n              <Image \n                source={{uri: user != null ? getSenderFull(user, chat.users).profilePic : null}}  \n                style = {styles.image}\n             />\n            <View style = {styles.content}>\n                <View style = {styles.row}>\n                    <Text style = {styles.name}>\n                        {user != null ? getSenderFull(user, chat.users).firstName : null}\n                    </Text> \n                    {/* <Text style = {styles.subTitle}>\n                        {dayjs(chat.lastMessage.createdAt).fromNow(true)}\n                    </Text>  */}\n                </View>\n               {/* {messages && messages.map((mess) => {\n                // <Text numberOfLines={2} style = {styles.subTitle}>\n                <Text key={mess._id} style = {styles.subTitle}>\n                {mess.content}\n                 </Text>\n\n              })}  */}\n            </View>\n            {/* <View>\n                  {messages && messages.map((mess) => (\n                <Text key={mess._id} style={styles.Tex}>{mess.content}</Text>\n                   )) } \n        </View> */}\n\n        </Pressable>\n       \n     \n       \n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        marginHorizontal: 10,\n        marginVertical: 5,\n        height: 70,\n    },\n    image: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        marginRight: 10\n    },\n    content: {\n        flex: 1,\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        borderBottomColor: 'lightgray'\n    },\n    row: {\n        flexDirection: 'row'\n    },\n    name: {\n        flex: 1,\n        fontWeight: 'bold',\n    },\n    subTitle: {\n        color: \"gray\"\n    },\n    Tex: {\n        marginTop: 200\n    }\n    \n})\n\nexport default ChatListItem"],"mappings":"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"},"metadata":{},"sourceType":"module"}