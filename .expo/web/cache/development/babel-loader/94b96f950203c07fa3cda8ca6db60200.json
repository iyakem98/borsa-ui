{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ChatState } from \"../../../context/ChatProvider\";\nimport { getSenderFull } from \"../../../ChatConfig/ChatLogics\";\nimport { useNavigation } from '@react-navigation/native';\nimport dayjs from 'dayjs';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatListHeader = function ChatListHeader(_ref) {\n  var chatArr = _ref.chatArr;\n  var _useSelector = useSelector(function (state) {\n      return state.auth;\n    }),\n    user = _useSelector.user;\n  var _ChatState = ChatState(),\n    triggerChange = _ChatState.triggerChange,\n    settriggerChange = _ChatState.settriggerChange;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    triggerChange2 = _useState2[0],\n    settriggerChange2 = _useState2[1];\n  var navigation = useNavigation();\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    query = _useState4[0],\n    setQuery = _useState4[1];\n  useEffect(function () {}, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.input,\n      children: [_jsx(Ionicons, {\n        name: \"search\",\n        size: 24,\n        color: \"gray\"\n      }), _jsx(TextInput, {\n        style: {\n          paddingHorizontal: 10,\n          paddingVertical: 7,\n          width: \"100%\",\n          fontSize: 17\n        },\n        placeholder: \"search\",\n        placeholderTextColor: \"gray\",\n        onFocus: function onFocus() {\n          settriggerChange(false);\n          settriggerChange2(true);\n        },\n        onChangeText: function onChangeText(e) {\n          setQuery(e);\n          if (e == \"\") {\n            settriggerChange(true);\n            settriggerChange2(false);\n          } else {\n            settriggerChange(false);\n            settriggerChange2(true);\n          }\n        },\n        autoCapitalize: \"none\"\n      })]\n    }), _jsx(View, {\n      children: chatArr && chatArr.map(function (chat) {\n        if (chat != null && chat.latestMessage != null) {\n          if (1) {\n            return _jsx(View, {\n              children: triggerChange2 && _jsxs(Pressable, {\n                onPress: function onPress() {\n                  navigation.navigate('Messaging', {\n                    chatId: chat._id,\n                    userSelected: user != null ? getSenderFull(user, chat.users).userName : null\n                  });\n                },\n                style: styles.box,\n                children: [_jsx(View, {\n                  children: _jsx(Image, {\n                    source: {\n                      uri: user != null ? getSenderFull(user, chat.users).profilePic : null\n                    },\n                    style: styles.image\n                  })\n                }), _jsxs(View, {\n                  style: styles.content,\n                  children: [_jsxs(View, {\n                    style: styles.row,\n                    children: [_jsx(Text, {\n                      style: styles.name,\n                      children: user != null ? getSenderFull(user, chat.users).firstName : null\n                    }), _jsx(Text, {\n                      style: styles.subTitle,\n                      children: dayjs(chat.latestMessage).fromNow(true)\n                    })]\n                  }), chat.latestMessage && chat.latestMessage.content ? _jsx(View, {\n                    style: {\n                      flexDirection: 'row'\n                    },\n                    children: _jsx(Text, {\n                      numberOfLines: 2,\n                      style: styles.subTitle,\n                      children: chat.latestMessage.content\n                    })\n                  }) : \"\"]\n                })]\n              }, chat._id)\n            }, chat._id);\n          }\n        }\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  box: {\n    flexDirection: 'row',\n    marginHorizontal: 10,\n    marginVertical: 5,\n    height: 70,\n    backgroundColor: '#fff'\n  },\n  container: {\n    paddingVertical: 16,\n    justifyContent: 'space-around',\n    marginBottom: 5\n  },\n  input: {\n    flexDirection: 'row',\n    backgroundColor: '#efefef',\n    width: '80%',\n    borderRadius: 20,\n    paddingLeft: 10,\n    alignItems: 'center',\n    marginLeft: 40\n  },\n  image: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginRight: 10\n  },\n  cheader: {\n    fontWeight: 'bold',\n    fontSize: 40\n  },\n  image: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginRight: 10\n  },\n  content: {\n    flex: 1,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: 'lightgray'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  name: {\n    flex: 1,\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  subTitle: {\n    color: \"gray\",\n    marginTop: 2,\n    marginLeft: 2,\n    fontSize: 15\n  },\n  Tex: {\n    marginTop: 200\n  }\n});\nexport default ChatListHeader;","map":{"version":3,"names":["Ionicons","useEffect","useState","useSelector","ChatState","getSenderFull","useNavigation","dayjs","ChatListHeader","chatArr","state","auth","user","triggerChange","settriggerChange","triggerChange2","settriggerChange2","navigation","query","setQuery","styles","container","input","paddingHorizontal","paddingVertical","width","fontSize","e","map","chat","latestMessage","navigate","chatId","_id","userSelected","users","userName","box","uri","profilePic","image","content","row","name","firstName","subTitle","fromNow","flexDirection","StyleSheet","create","marginHorizontal","marginVertical","height","backgroundColor","justifyContent","marginBottom","borderRadius","paddingLeft","alignItems","marginLeft","marginRight","cheader","fontWeight","flex","borderBottomWidth","hairlineWidth","borderBottomColor","color","marginTop","Tex"],"sources":["/home/dagmawi/personal/borsa/ui/borsa-ui/src/components/Chats/ChatListItem/ChatListHeader.js"],"sourcesContent":["import {View, Text, TextInput, StyleSheet, Pressable, Image} from 'react-native'\nimport { Ionicons } from '@expo/vector-icons';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ChatState } from '../../../context/ChatProvider';\nimport { getSenderFull } from '../../../ChatConfig/ChatLogics';\nimport { useNavigation } from '@react-navigation/native';\nimport dayjs from 'dayjs';\n\n\nconst ChatListHeader = ({chatArr}) => {\n    const { user } = useSelector((state) => state.auth)\n    const {triggerChange, settriggerChange} = ChatState();\n    const [triggerChange2, settriggerChange2] = useState(false);\n    const navigation = useNavigation()\n    \n    const [query, setQuery] = useState(\"\")\n    useEffect(()=> {\n        // console.log(chatArr[0])\n        // console.log(chatArr.splice(0, 2))\n        // console.log(triggerChange)\n    }, [])\n    // console.log(triggerChange)\n    // console.log(chatArr.filter(user => chatArr.users[1].firstName.includes(\"a\")))\n  return (\n    <View style = {styles.container}>\n        <View style = {styles.input}>\n        <Ionicons name=\"search\" size={24} color=\"gray\" />\n            <TextInput\n                style = {{ paddingHorizontal: 10,\n                    paddingVertical: 7,\n                     width: \"100%\",\n                     fontSize: 17,\n                     //color: '#593196'\n        }} \n                placeholder='search'\n                placeholderTextColor=\"gray\" \n                onFocus={()=> {\n                    settriggerChange(false)\n                    settriggerChange2(true)\n\n                }}\n                onChangeText={(e) => {\n                    setQuery(e)\n                       if(e == \"\"){\n                        settriggerChange(true)\n                        settriggerChange2(false)\n                       \n                       }\n                       else{\n                        settriggerChange(false)\n                        settriggerChange2(true)\n                        \n                       \n                       }         \n                }}\n                autoCapitalize=\"none\"\n \n\n                />\n                {/* add triggerchange2 event */}\n            </View>\n            <View>\n                {chatArr &&    chatArr.map(chat => {\n                    if( chat != null &&  chat.latestMessage != null){\n                        if(1)\n                        {\n                            return  <View key={chat._id}> \n                    \n                            {/* {chat.users && (chat.users[1].firstName.toLowerCase().includes(query) || chat.users[1].lastName.toLowerCase().includes(query) || chat.users[1].userName.toLowerCase().includes(query) ) && <Text>{chat.users[1].firstName}</Text> } */}\n                            {/* if(chat.users && (chat.users[1].firstName.toLowerCase().includes(query) || chat.users[1].lastName.toLowerCase().includes(query) || chat.users[1].userName.toLowerCase().includes(query) ) && chat.latestMessage != null && \n                                chat.users[0].firstName != user.firstName)\n                                {\n                                    console.log(chat.users[0].firstName )\n                                } */}\n                            \n                            \n                            \n                            \n                           {triggerChange2 && <Pressable key={chat._id} onPress={()=> {\n                                navigation.navigate('Messaging', {chatId: chat._id, userSelected:\n                            \n                                    user != null ? getSenderFull(user, chat.users).userName : null })}}\n                                    style={styles.box}\n                            >\n                                <View>\n                                <Image \n                                  source={{uri: user != null ? getSenderFull(user, chat.users).profilePic : null}}  \n                                  style = {styles.image}\n                               />\n                                </View>\n                                <View style = {styles.content}>\n                                        <View style = {styles.row}>\n                                            <Text style = {styles.name}>\n                                                {user != null ? getSenderFull(user, chat.users).firstName : null}\n                                            </Text> \n                                            <Text style = {styles.subTitle}>\n                                                {dayjs(chat.latestMessage).fromNow(true)}\n                                            </Text>   \n                                        </View>\n                                        {chat.latestMessage && chat.latestMessage.content ?\n                                            <View style = {{\n                                            flexDirection: 'row'\n                                            }}>\n                        \n                                            \n                                            {/* <Ionicons name=\"checkmark-outline\" size={20} color=\"#593196\" /> */}\n                                            \n                                            <Text  numberOfLines={2} style = {styles.subTitle}>\n                                                {chat.latestMessage.content}\n                                            </Text>\n                                            </View>\n                                \n                                   : \"\" }    \n        \n                                </View>\n        \n                            </Pressable>\n                        \n                                        }\n        \n                           \n                            \n                            \n                                {/* {chat.users && } */}\n                            </View>\n                        } \n                        // else if(chat.users[0].firstName.toLowerCase().includes(query) &&  ){\n                        //     {triggerChange2 && <Pressable key={chat._id} onPress={()=> {\n                        //         navigation.navigate('Messaging', {chatId: chat._id, userSelected:\n                            \n                        //             user != null ? getSenderFull(user, chat.users).userName : null })}}\n                        //             style={styles.box}\n                        //     >\n                        //         <View>\n                        //         <Image \n                        //           source={{uri: user != null ? getSenderFull(user, chat.users).profilePic : null}}  \n                        //           style = {styles.image}\n                        //        />\n                        //         </View>\n                        //         <View style = {styles.content}>\n                        //                 <View style = {styles.row}>\n                        //                     <Text style = {styles.name}>\n                        //                         {user != null ? getSenderFull(user, chat.users).firstName : null}\n                        //                     </Text> \n                        //                     <Text style = {styles.subTitle}>\n                        //                         {dayjs(chat.latestMessage).fromNow(true)}\n                        //                     </Text>   \n                        //                 </View>\n                        //                 {chat.latestMessage && chat.latestMessage.content ?\n                        //                     <View style = {{\n                        //                     flexDirection: 'row'\n                        //                     }}>\n                        \n                                            \n                        //                     {/* <Ionicons name=\"checkmark-outline\" size={20} color=\"#593196\" /> */}\n                                            \n                        //                     <Text  numberOfLines={2} style = {styles.subTitle}>\n                        //                         {chat.latestMessage.content}\n                        //                     </Text>\n                        //                     </View>\n                                \n                        //            : \"\" }    \n        \n                        //         </View>\n        \n                        //     </Pressable>\n                        \n                        //                 }\n\n                        // }\n                   \n                    }\n                    })}\n            </View>\n        {/* <Ionicons name=\"filter-sharp\" size={24} color=\"#593196\" /> */}\n    </View>\n  )\n}\nconst styles = StyleSheet.create ({\n    box : {\n        flexDirection: 'row',\n        marginHorizontal: 10,\n        marginVertical: 5,\n        height: 70,\n        backgroundColor: '#fff'\n    }, \n    container: {\n       paddingVertical: 16,\n        // flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginBottom: 5,\n    },\n\n    input: {\n        flexDirection: 'row',\n        backgroundColor: '#efefef',\n        width: '80%',\n        borderRadius: 20,\n        paddingLeft: 10,\n        alignItems: 'center',\n        marginLeft: 40,\n        \n    },\n    image: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        marginRight: 10\n      },\n\n    cheader: {\n        fontWeight: 'bold',\n        fontSize: 40,\n\n    },\n    image: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        marginRight: 10\n      },\n      content: {\n        flex: 1,\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        borderBottomColor: 'lightgray'\n      },\n      row: {\n        flexDirection: 'row'\n      },\n      name: {\n        flex: 1,\n        fontWeight: 'bold',\n        fontSize: 16\n      },\n      subTitle: {\n        color: \"gray\",\n        marginTop: 2,\n        marginLeft: 2,\n        fontSize: 15\n      },\n      Tex: {\n        marginTop: 200\n      }\n})\n export default ChatListHeader"],"mappings":"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"},"metadata":{},"sourceType":"module"}